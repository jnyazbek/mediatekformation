1707462039
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3A7affd41d8cfcf0ae652b0ceb1c70b1b7-85c604b5fe2da25e996a73da0a437c32
s:30292:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"85c604b5fe2da25e996a73da0a437c32";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"pl.php";s:39:" phpDocumentor\Reflection\Php\File path";s:52:"vendor/symfony/intl/Resources/data/currencies/pl.php";s:41:" phpDocumentor\Reflection\Php\File source";s:21791:"<?php

return [
    'Names' => [
        'ADP' => [
            'ADP',
            'peseta andorska',
        ],
        'AED' => [
            'AED',
            'dirham ZEA',
        ],
        'AFA' => [
            'AFA',
            'afgani (1927–2002)',
        ],
        'AFN' => [
            'AFN',
            'afgani afgańskie',
        ],
        'ALL' => [
            'ALL',
            'lek albański',
        ],
        'AMD' => [
            'AMD',
            'dram armeński',
        ],
        'ANG' => [
            'ANG',
            'gulden antylski',
        ],
        'AOA' => [
            'AOA',
            'kwanza angolska',
        ],
        'AOK' => [
            'AOK',
            'kwanza angolańska (1977–1990)',
        ],
        'AON' => [
            'AON',
            'nowa kwanza angolańska (1990–2000)',
        ],
        'AOR' => [
            'AOR',
            'kwanza angolańska Reajustado (1995–1999)',
        ],
        'ARA' => [
            'ARA',
            'austral argentyński',
        ],
        'ARP' => [
            'ARP',
            'peso argentyńskie (1983–1985)',
        ],
        'ARS' => [
            'ARS',
            'peso argentyńskie',
        ],
        'ATS' => [
            'ATS',
            'szyling austriacki',
        ],
        'AUD' => [
            'AUD',
            'dolar australijski',
        ],
        'AWG' => [
            'AWG',
            'florin arubański',
        ],
        'AZM' => [
            'AZM',
            'manat azerbejdżański',
        ],
        'AZN' => [
            'AZN',
            'manat azerski',
        ],
        'BAD' => [
            'BAD',
            'dinar Bośni i Hercegowiny',
        ],
        'BAM' => [
            'BAM',
            'marka zamienna Bośni i Hercegowiny',
        ],
        'BBD' => [
            'BBD',
            'dolar barbadoski',
        ],
        'BDT' => [
            'BDT',
            'taka bengalska',
        ],
        'BEC' => [
            'BEC',
            'frank belgijski (zamienny)',
        ],
        'BEF' => [
            'BEF',
            'frank belgijski',
        ],
        'BEL' => [
            'BEL',
            'frank belgijski (finansowy)',
        ],
        'BGL' => [
            'BGL',
            'lew bułgarski wymienny',
        ],
        'BGM' => [
            'BGM',
            'lew bułgarski socjalistyczny',
        ],
        'BGN' => [
            'BGN',
            'lew bułgarski',
        ],
        'BGO' => [
            'BGO',
            'lew bułgarski (1879–1952)',
        ],
        'BHD' => [
            'BHD',
            'dinar bahrański',
        ],
        'BIF' => [
            'BIF',
            'frank burundyjski',
        ],
        'BMD' => [
            'BMD',
            'dolar bermudzki',
        ],
        'BND' => [
            'BND',
            'dolar brunejski',
        ],
        'BOB' => [
            'BOB',
            'boliviano boliwijskie',
        ],
        'BOP' => [
            'BOP',
            'peso boliwijskie',
        ],
        'BOV' => [
            'BOV',
            'mvdol boliwijski',
        ],
        'BRB' => [
            'BRB',
            'cruzeiro novo brazylijskie (1967–1986)',
        ],
        'BRC' => [
            'BRC',
            'cruzado brazylijskie',
        ],
        'BRE' => [
            'BRE',
            'cruzeiro brazylijskie (1990–1993)',
        ],
        'BRL' => [
            'R$',
            'real brazylijski',
        ],
        'BRN' => [
            'BRN',
            'nowe cruzado brazylijskie',
        ],
        'BRR' => [
            'BRR',
            'cruzeiro brazylijskie',
        ],
        'BSD' => [
            'BSD',
            'dolar bahamski',
        ],
        'BTN' => [
            'BTN',
            'ngultrum bhutański',
        ],
        'BUK' => [
            'BUK',
            'kyat birmański',
        ],
        'BWP' => [
            'BWP',
            'pula botswańska',
        ],
        'BYB' => [
            'BYB',
            'rubel białoruski (1994–1999)',
        ],
        'BYN' => [
            'BYN',
            'rubel białoruski',
        ],
        'BYR' => [
            'BYR',
            'rubel białoruski (2000–2016)',
        ],
        'BZD' => [
            'BZD',
            'dolar belizeński',
        ],
        'CAD' => [
            'CAD',
            'dolar kanadyjski',
        ],
        'CDF' => [
            'CDF',
            'frank kongijski',
        ],
        'CHF' => [
            'CHF',
            'frank szwajcarski',
        ],
        'CLP' => [
            'CLP',
            'peso chilijskie',
        ],
        'CNH' => [
            'CNH',
            'juan chiński (rynek zewnętrzny)',
        ],
        'CNY' => [
            'CNY',
            'juan chiński',
        ],
        'COP' => [
            'COP',
            'peso kolumbijskie',
        ],
        'CRC' => [
            'CRC',
            'colon kostarykański',
        ],
        'CSD' => [
            'CSD',
            'stary dinar serbski',
        ],
        'CSK' => [
            'CSK',
            'korona czechosłowacka',
        ],
        'CUC' => [
            'CUC',
            'peso kubańskie wymienialne',
        ],
        'CUP' => [
            'CUP',
            'peso kubańskie',
        ],
        'CVE' => [
            'CVE',
            'escudo zielonoprzylądkowe',
        ],
        'CYP' => [
            'CYP',
            'funt cypryjski',
        ],
        'CZK' => [
            'CZK',
            'korona czeska',
        ],
        'DDM' => [
            'DDM',
            'wschodnia marka wschodnioniemiecka',
        ],
        'DEM' => [
            'DEM',
            'marka niemiecka',
        ],
        'DJF' => [
            'DJF',
            'frank dżibutyjski',
        ],
        'DKK' => [
            'DKK',
            'korona duńska',
        ],
        'DOP' => [
            'DOP',
            'peso dominikańskie',
        ],
        'DZD' => [
            'DZD',
            'dinar algierski',
        ],
        'ECS' => [
            'ECS',
            'sucre ekwadorski',
        ],
        'EEK' => [
            'EEK',
            'korona estońska',
        ],
        'EGP' => [
            'EGP',
            'funt egipski',
        ],
        'ERN' => [
            'ERN',
            'nakfa erytrejska',
        ],
        'ESA' => [
            'ESA',
            'peseta hiszpańska (Konto A)',
        ],
        'ESB' => [
            'ESB',
            'peseta hiszpańska (konto wymienne)',
        ],
        'ESP' => [
            'ESP',
            'peseta hiszpańska',
        ],
        'ETB' => [
            'ETB',
            'birr etiopski',
        ],
        'EUR' => [
            '€',
            'euro',
        ],
        'FIM' => [
            'FIM',
            'marka fińska',
        ],
        'FJD' => [
            'FJD',
            'dolar fidżyjski',
        ],
        'FKP' => [
            'FKP',
            'funt falklandzki',
        ],
        'FRF' => [
            'FRF',
            'frank francuski',
        ],
        'GBP' => [
            'GBP',
            'funt szterling',
        ],
        'GEK' => [
            'GEK',
            'kupon gruziński larit',
        ],
        'GEL' => [
            'GEL',
            'lari gruzińskie',
        ],
        'GHC' => [
            'GHC',
            'cedi ghańskie (1979–2007)',
        ],
        'GHS' => [
            'GHS',
            'cedi ghańskie',
        ],
        'GIP' => [
            'GIP',
            'funt gibraltarski',
        ],
        'GMD' => [
            'GMD',
            'dalasi gambijskie',
        ],
        'GNF' => [
            'GNF',
            'frank gwinejski',
        ],
        'GNS' => [
            'GNS',
            'syli gwinejskie',
        ],
        'GQE' => [
            'GQE',
            'ekwele gwinejskie Gwinei Równikowej',
        ],
        'GRD' => [
            'GRD',
            'drachma grecka',
        ],
        'GTQ' => [
            'GTQ',
            'quetzal gwatemalski',
        ],
        'GWE' => [
            'GWE',
            'escudo Gwinea Portugalska',
        ],
        'GWP' => [
            'GWP',
            'peso Guinea-Bissau',
        ],
        'GYD' => [
            'GYD',
            'dolar gujański',
        ],
        'HKD' => [
            'HKD',
            'dolar hongkoński',
        ],
        'HNL' => [
            'HNL',
            'lempira honduraska',
        ],
        'HRD' => [
            'HRD',
            'dinar chorwacki',
        ],
        'HRK' => [
            'HRK',
            'kuna chorwacka',
        ],
        'HTG' => [
            'HTG',
            'gourde haitański',
        ],
        'HUF' => [
            'HUF',
            'forint węgierski',
        ],
        'IDR' => [
            'IDR',
            'rupia indonezyjska',
        ],
        'IEP' => [
            'IEP',
            'funt irlandzki',
        ],
        'ILP' => [
            'ILP',
            'funt izraelski',
        ],
        'ILS' => [
            'ILS',
            'nowy szekel izraelski',
        ],
        'INR' => [
            'INR',
            'rupia indyjska',
        ],
        'IQD' => [
            'IQD',
            'dinar iracki',
        ],
        'IRR' => [
            'IRR',
            'rial irański',
        ],
        'ISK' => [
            'ISK',
            'korona islandzka',
        ],
        'ITL' => [
            'ITL',
            'lir włoski',
        ],
        'JMD' => [
            'JMD',
            'dolar jamajski',
        ],
        'JOD' => [
            'JOD',
            'dinar jordański',
        ],
        'JPY' => [
            'JPY',
            'jen japoński',
        ],
        'KES' => [
            'KES',
            'szyling kenijski',
        ],
        'KGS' => [
            'KGS',
            'som kirgiski',
        ],
        'KHR' => [
            'KHR',
            'riel kambodżański',
        ],
        'KMF' => [
            'KMF',
            'frank komoryjski',
        ],
        'KPW' => [
            'KPW',
            'won północnokoreański',
        ],
        'KRW' => [
            'KRW',
            'won południowokoreański',
        ],
        'KWD' => [
            'KWD',
            'dinar kuwejcki',
        ],
        'KYD' => [
            'KYD',
            'dolar kajmański',
        ],
        'KZT' => [
            'KZT',
            'tenge kazachskie',
        ],
        'LAK' => [
            'LAK',
            'kip laotański',
        ],
        'LBP' => [
            'LBP',
            'funt libański',
        ],
        'LKR' => [
            'LKR',
            'rupia lankijska',
        ],
        'LRD' => [
            'LRD',
            'dolar liberyjski',
        ],
        'LSL' => [
            'LSL',
            'loti lesotyjskie',
        ],
        'LTL' => [
            'LTL',
            'lit litewski',
        ],
        'LTT' => [
            'LTT',
            'talon litewski',
        ],
        'LUF' => [
            'LUF',
            'frank luksemburski',
        ],
        'LVL' => [
            'LVL',
            'łat łotewski',
        ],
        'LVR' => [
            'LVR',
            'rubel łotewski',
        ],
        'LYD' => [
            'LYD',
            'dinar libijski',
        ],
        'MAD' => [
            'MAD',
            'dirham marokański',
        ],
        'MAF' => [
            'MAF',
            'frank marokański',
        ],
        'MDL' => [
            'MDL',
            'lej mołdawski',
        ],
        'MGA' => [
            'MGA',
            'ariary malgaski',
        ],
        'MGF' => [
            'MGF',
            'frank malgaski',
        ],
        'MKD' => [
            'MKD',
            'denar macedoński',
        ],
        'MLF' => [
            'MLF',
            'frank malijski',
        ],
        'MMK' => [
            'MMK',
            'kiat birmański',
        ],
        'MNT' => [
            'MNT',
            'tugrik mongolski',
        ],
        'MOP' => [
            'MOP',
            'pataca Makau',
        ],
        'MRO' => [
            'MRO',
            'ouguiya mauretańska (1973–2017)',
        ],
        'MRU' => [
            'MRU',
            'ugija mauretańska',
        ],
        'MTL' => [
            'MTL',
            'lira maltańska',
        ],
        'MTP' => [
            'MTP',
            'funt maltański',
        ],
        'MUR' => [
            'MUR',
            'rupia maurytyjska',
        ],
        'MVR' => [
            'MVR',
            'rupia malediwska',
        ],
        'MWK' => [
            'MWK',
            'kwacha malawijska',
        ],
        'MXN' => [
            'MXN',
            'peso meksykańskie',
        ],
        'MXP' => [
            'MXP',
            'peso srebrne meksykańskie (1861–1992)',
        ],
        'MYR' => [
            'MYR',
            'ringgit malezyjski',
        ],
        'MZE' => [
            'MZE',
            'escudo mozambickie',
        ],
        'MZM' => [
            'MZM',
            'metical Mozambik',
        ],
        'MZN' => [
            'MZN',
            'metical mozambicki',
        ],
        'NAD' => [
            'NAD',
            'dolar namibijski',
        ],
        'NGN' => [
            'NGN',
            'naira nigeryjska',
        ],
        'NIC' => [
            'NIC',
            'cordoba nikaraguańska (1988–1991)',
        ],
        'NIO' => [
            'NIO',
            'cordoba nikaraguańska',
        ],
        'NLG' => [
            'NLG',
            'gulden holenderski',
        ],
        'NOK' => [
            'NOK',
            'korona norweska',
        ],
        'NPR' => [
            'NPR',
            'rupia nepalska',
        ],
        'NZD' => [
            'NZD',
            'dolar nowozelandzki',
        ],
        'OMR' => [
            'OMR',
            'rial omański',
        ],
        'PAB' => [
            'PAB',
            'balboa panamski',
        ],
        'PEI' => [
            'PEI',
            'inti peruwiański',
        ],
        'PEN' => [
            'PEN',
            'sol peruwiański',
        ],
        'PES' => [
            'PES',
            'sol peruwiański (1863–1965)',
        ],
        'PGK' => [
            'PGK',
            'kina papuańska',
        ],
        'PHP' => [
            'PHP',
            'peso filipińskie',
        ],
        'PKR' => [
            'PKR',
            'rupia pakistańska',
        ],
        'PLN' => [
            'zł',
            'złoty polski',
        ],
        'PLZ' => [
            'PLZ',
            'złoty polski (1950–1995)',
        ],
        'PTE' => [
            'PTE',
            'escudo portugalskie',
        ],
        'PYG' => [
            'PYG',
            'guarani paragwajskie',
        ],
        'QAR' => [
            'QAR',
            'rial katarski',
        ],
        'RHD' => [
            'RHD',
            'dolar rodezyjski',
        ],
        'ROL' => [
            'ROL',
            'lej rumuński (1952–2006)',
        ],
        'RON' => [
            'RON',
            'lej rumuński',
        ],
        'RSD' => [
            'RSD',
            'dinar serbski',
        ],
        'RUB' => [
            'RUB',
            'rubel rosyjski',
        ],
        'RUR' => [
            'RUR',
            'rubel rosyjski (1991–1998)',
        ],
        'RWF' => [
            'RWF',
            'frank ruandyjski',
        ],
        'SAR' => [
            'SAR',
            'rial saudyjski',
        ],
        'SBD' => [
            'SBD',
            'dolar Wysp Salomona',
        ],
        'SCR' => [
            'SCR',
            'rupia seszelska',
        ],
        'SDD' => [
            'SDD',
            'dinar sudański',
        ],
        'SDG' => [
            'SDG',
            'funt sudański',
        ],
        'SDP' => [
            'SDP',
            'funt sudański (1957–1998)',
        ],
        'SEK' => [
            'SEK',
            'korona szwedzka',
        ],
        'SGD' => [
            'SGD',
            'dolar singapurski',
        ],
        'SHP' => [
            'SHP',
            'funt Świętej Heleny',
        ],
        'SIT' => [
            'SIT',
            'tolar słoweński',
        ],
        'SKK' => [
            'SKK',
            'korona słowacka',
        ],
        'SLE' => [
            'SLE',
            'leone sierraleoński',
        ],
        'SLL' => [
            'SLL',
            'leone sierraleoński (1964—2022)',
        ],
        'SOS' => [
            'SOS',
            'szyling somalijski',
        ],
        'SRD' => [
            'SRD',
            'dolar surinamski',
        ],
        'SRG' => [
            'SRG',
            'gulden surinamski',
        ],
        'SSP' => [
            'SSP',
            'funt południowosudański',
        ],
        'STD' => [
            'STD',
            'dobra Wysp Świętego Tomasza i Książęcej (1977–2017)',
        ],
        'STN' => [
            'STN',
            'dobra Wysp Świętego Tomasza i Książęcej',
        ],
        'SUR' => [
            'SUR',
            'rubel radziecki',
        ],
        'SVC' => [
            'SVC',
            'colon salwadorski',
        ],
        'SYP' => [
            'SYP',
            'funt syryjski',
        ],
        'SZL' => [
            'SZL',
            'lilangeni Suazi',
        ],
        'THB' => [
            'THB',
            'baht tajski',
        ],
        'TJR' => [
            'TJR',
            'rubel tadżycki',
        ],
        'TJS' => [
            'TJS',
            'somoni tadżyckie',
        ],
        'TMM' => [
            'TMM',
            'manat turkmeński (1993–2009)',
        ],
        'TMT' => [
            'TMT',
            'manat turkmeński',
        ],
        'TND' => [
            'TND',
            'dinar tunezyjski',
        ],
        'TOP' => [
            'TOP',
            'pa’anga tongijska',
        ],
        'TPE' => [
            'TPE',
            'escudo timorskie',
        ],
        'TRL' => [
            'TRL',
            'lira turecka (1922–2005)',
        ],
        'TRY' => [
            'TRY',
            'lira turecka',
        ],
        'TTD' => [
            'TTD',
            'dolar trynidadzki',
        ],
        'TWD' => [
            'TWD',
            'nowy dolar tajwański',
        ],
        'TZS' => [
            'TZS',
            'szyling tanzański',
        ],
        'UAH' => [
            'UAH',
            'hrywna ukraińska',
        ],
        'UAK' => [
            'UAK',
            'karbowaniec ukraiński',
        ],
        'UGS' => [
            'UGS',
            'szyling ugandyjski (1966–1987)',
        ],
        'UGX' => [
            'UGX',
            'szyling ugandyjski',
        ],
        'USD' => [
            'USD',
            'dolar amerykański',
        ],
        'UYP' => [
            'UYP',
            'peso urugwajskie (1975–1993)',
        ],
        'UYU' => [
            'UYU',
            'peso urugwajskie',
        ],
        'UZS' => [
            'UZS',
            'som uzbecki',
        ],
        'VEB' => [
            'VEB',
            'boliwar wenezuelski (1871–2008)',
        ],
        'VEF' => [
            'VEF',
            'boliwar wenezuelski (2008–2018)',
        ],
        'VES' => [
            'VES',
            'boliwar wenezuelski',
        ],
        'VND' => [
            'VND',
            'dong wietnamski',
        ],
        'VUV' => [
            'VUV',
            'vatu wanuackie',
        ],
        'WST' => [
            'WST',
            'tala samoańskie',
        ],
        'XAF' => [
            'FCFA',
            'frank CFA BEAC',
        ],
        'XCD' => [
            'EC$',
            'dolar wschodniokaraibski',
        ],
        'XEU' => [
            'XEU',
            'ECU',
        ],
        'XFO' => [
            'XFO',
            'frank złoty francuski',
        ],
        'XFU' => [
            'XFU',
            'UIC-frank francuski',
        ],
        'XOF' => [
            'F CFA',
            'frank CFA',
        ],
        'XPF' => [
            'CFPF',
            'frank CFP',
        ],
        'YDD' => [
            'YDD',
            'dinar jemeński',
        ],
        'YER' => [
            'YER',
            'rial jemeński',
        ],
        'YUM' => [
            'YUM',
            'nowy dinar jugosławiański',
        ],
        'YUN' => [
            'YUN',
            'dinar jugosławiański wymienny',
        ],
        'ZAL' => [
            'ZAL',
            'rand południowoafrykański (finansowy)',
        ],
        'ZAR' => [
            'ZAR',
            'rand południowoafrykański',
        ],
        'ZMK' => [
            'ZMK',
            'kwacha zambijska (1968–2012)',
        ],
        'ZMW' => [
            'ZMW',
            'kwacha zambijska',
        ],
        'ZRN' => [
            'ZRN',
            'nowy zair zairski',
        ],
        'ZRZ' => [
            'ZRZ',
            'zair zairski',
        ],
        'ZWD' => [
            'ZWD',
            'dolar Zimbabwe (1980–2008)',
        ],
        'ZWL' => [
            'ZWL',
            'dolar Zimbabwe (2009)',
        ],
        'ZWR' => [
            'ZWR',
            'dolar Zimbabwe (2008)',
        ],
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";