1707462039
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3A19afb77b9fee0cefa8a6ad2c832567dd-b9996891867e0f3195514b18abc31244
s:7960:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImI5OTk2ODkxODY3ZTBmMzE5NTUxNGIxOGFiYzMxMjQ0IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6NjoibmQucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NTI6InZlbmRvci9zeW1mb255L2ludGwvUmVzb3VyY2VzL2RhdGEvY3VycmVuY2llcy9uZC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjUwNDU6Ijw/cGhwCgpyZXR1cm4gWwogICAgJ05hbWVzJyA9PiBbCiAgICAgICAgJ0FFRCcgPT4gWwogICAgICAgICAgICAnQUVEJywKICAgICAgICAgICAgJ0RvbGEgbGFzZUFyYWInLAogICAgICAgIF0sCiAgICAgICAgJ0FPQScgPT4gWwogICAgICAgICAgICAnQU9BJywKICAgICAgICAgICAgJ0t3YW56YSB5YXNlIEFuZ29sYScsCiAgICAgICAgXSwKICAgICAgICAnQVVEJyA9PiBbCiAgICAgICAgICAgICdBJCcsCiAgICAgICAgICAgICdEb2xhIHlhc2UgQXVzdHJhbGlhJywKICAgICAgICBdLAogICAgICAgICdCSEQnID0+IFsKICAgICAgICAgICAgJ0JIRCcsCiAgICAgICAgICAgICdEaW5hcmkgeWFzZSBCaGFoYXJlbmknLAogICAgICAgIF0sCiAgICAgICAgJ0JJRicgPT4gWwogICAgICAgICAgICAnQklGJywKICAgICAgICAgICAgJ0Z1bGVua2kgeWFzZSBCaHVydW5kaScsCiAgICAgICAgXSwKICAgICAgICAnQldQJyA9PiBbCiAgICAgICAgICAgICdCV1AnLAogICAgICAgICAgICAnUGh1bGEgeWFzZSBCb3Rzd2FuYScsCiAgICAgICAgXSwKICAgICAgICAnQ0FEJyA9PiBbCiAgICAgICAgICAgICdDQSQnLAogICAgICAgICAgICAnRG9sYSB5YXNlIEtoYW5hZGEnLAogICAgICAgIF0sCiAgICAgICAgJ0NERicgPT4gWwogICAgICAgICAgICAnQ0RGJywKICAgICAgICAgICAgJ0Z1bGVua2kgeWFzZSBLaG9uZ28nLAogICAgICAgIF0sCiAgICAgICAgJ0NIRicgPT4gWwogICAgICAgICAgICAnQ0hGJywKICAgICAgICAgICAgJ0Z1bGVua2kgeWFzZSBTd2lzaScsCiAgICAgICAgXSwKICAgICAgICAnQ05ZJyA9PiBbCiAgICAgICAgICAgICdDTsKlJywKICAgICAgICAgICAgJ1l1YW4gUmVubWluYmkgeWFzZSBDaGluYScsCiAgICAgICAgXSwKICAgICAgICAnQ1ZFJyA9PiBbCiAgICAgICAgICAgICdDVkUnLAogICAgICAgICAgICAnRXNjdWRvIENhYm92ZXJkaWFubycsCiAgICAgICAgXSwKICAgICAgICAnREpGJyA9PiBbCiAgICAgICAgICAgICdESkYnLAogICAgICAgICAgICAnRnVsZW5raSB5YXNlIEppYmh1dGhpJywKICAgICAgICBdLAogICAgICAgICdEWkQnID0+IFsKICAgICAgICAgICAgJ0RaRCcsCiAgICAgICAgICAgICdEaW5hbGkgeWFzZSBBbGplcml5YScsCiAgICAgICAgXSwKICAgICAgICAnRUdQJyA9PiBbCiAgICAgICAgICAgICdFR1AnLAogICAgICAgICAgICAnUGhhd3VuZGkgbGFzZUdpYmhpZGUnLAogICAgICAgIF0sCiAgICAgICAgJ0VSTicgPT4gWwogICAgICAgICAgICAnRVJOJywKICAgICAgICAgICAgJ05ha2ZhIHlhc2UgRXJpdHJlYScsCiAgICAgICAgXSwKICAgICAgICAnRVRCJyA9PiBbCiAgICAgICAgICAgICdFVEInLAogICAgICAgICAgICAnRG9sYSBsYXNlRXRoaW9waWEnLAogICAgICAgIF0sCiAgICAgICAgJ0VVUicgPT4gWwogICAgICAgICAgICAn4oKsJywKICAgICAgICAgICAgJ1l1cm8nLAogICAgICAgIF0sCiAgICAgICAgJ0dCUCcgPT4gWwogICAgICAgICAgICAnwqMnLAogICAgICAgICAgICAnUGhhd3VuZGkgeWFzZSBOZ2lsYW5kaScsCiAgICAgICAgXSwKICAgICAgICAnR0hDJyA9PiBbCiAgICAgICAgICAgICdHSEMnLAogICAgICAgICAgICAnU2VkaSB5YXNlIEdoYW5hJywKICAgICAgICBdLAogICAgICAgICdHTUQnID0+IFsKICAgICAgICAgICAgJ0dNRCcsCiAgICAgICAgICAgICdEYWxhc2kgeWFzZSBHYW1iaWEnLAogICAgICAgIF0sCiAgICAgICAgJ0dOUycgPT4gWwogICAgICAgICAgICAnR05TJywKICAgICAgICAgICAgJ0Z1bGVua2kgeWFzZSBHaW5lJywKICAgICAgICBdLAogICAgICAgICdJTlInID0+IFsKICAgICAgICAgICAgJ+KCuScsCiAgICAgICAgICAgICdSdXBpIHlhc2UgSW5kaXlhJywKICAgICAgICBdLAogICAgICAgICdKUFknID0+IFsKICAgICAgICAgICAgJ0pQwqUnLAogICAgICAgICAgICAnWWVuaSB5YXNlIEphcGhhbmknLAogICAgICAgIF0sCiAgICAgICAgJ0tFUycgPT4gWwogICAgICAgICAgICAnS0VTJywKICAgICAgICAgICAgJ1NoaWxpbmdpIHlhc2UgS2VueWEnLAogICAgICAgIF0sCiAgICAgICAgJ0tNRicgPT4gWwogICAgICAgICAgICAnS01GJywKICAgICAgICAgICAgJ0Z1bGVua2kgeWFzZSBLaG9tb3JvJywKICAgICAgICBdLAogICAgICAgICdMUkQnID0+IFsKICAgICAgICAgICAgJ0xSRCcsCiAgICAgICAgICAgICdEb2xhIHlhc2UgTGliaGVyaXlhJywKICAgICAgICBdLAogICAgICAgICdMU0wnID0+IFsKICAgICAgICAgICAgJ0xTTCcsCiAgICAgICAgICAgICdMb3RoaSB5YXNlIExlc290aG8nLAogICAgICAgIF0sCiAgICAgICAgJ0xZRCcgPT4gWwogICAgICAgICAgICAnTFlEJywKICAgICAgICAgICAgJ0RpbmFyaSB5YXNlIExpYnlhJywKICAgICAgICBdLAogICAgICAgICdNQUQnID0+IFsKICAgICAgICAgICAgJ01BRCcsCiAgICAgICAgICAgICdEaXJoYW0geWFzZSBNb3Jva2hvJywKICAgICAgICBdLAogICAgICAgICdNR0EnID0+IFsKICAgICAgICAgICAgJ01HQScsCiAgICAgICAgICAgICdGdWxlbmtpIHlhc2UgTWFsYWdhc2knLAogICAgICAgIF0sCiAgICAgICAgJ01STycgPT4gWwogICAgICAgICAgICAnTVJPJywKICAgICAgICAgICAgJ1Vnd2l5YSB5YXNlIE1vcml0YW5peWEgKDE5NzPigJMyMDE3KScsCiAgICAgICAgXSwKICAgICAgICAnTVJVJyA9PiBbCiAgICAgICAgICAgICdNUlUnLAogICAgICAgICAgICAnVWd3aXlhIHlhc2UgTW9yaXRhbml5YScsCiAgICAgICAgXSwKICAgICAgICAnTVVSJyA9PiBbCiAgICAgICAgICAgICdNVVInLAogICAgICAgICAgICAnUnVwaSB5YXNlIE1vcmlzaGFzaScsCiAgICAgICAgXSwKICAgICAgICAnTVdLJyA9PiBbCiAgICAgICAgICAgICdNV0snLAogICAgICAgICAgICAnS3dhY2hhIHlhc2UgTWFsYXdpJywKICAgICAgICBdLAogICAgICAgICdNWk0nID0+IFsKICAgICAgICAgICAgJ01aTScsCiAgICAgICAgICAgICdNZXRpa2FsaSB5YXNlIE1vemFtYmlraScsCiAgICAgICAgXSwKICAgICAgICAnTkFEJyA9PiBbCiAgICAgICAgICAgICdOQUQnLAogICAgICAgICAgICAnRG9sYSB5YXNlIE5hbWliaXlhJywKICAgICAgICBdLAogICAgICAgICdOR04nID0+IFsKICAgICAgICAgICAgJ05HTicsCiAgICAgICAgICAgICdOYXlpcmEgeWFzZSBOaWplcml5YScsCiAgICAgICAgXSwKICAgICAgICAnUldGJyA9PiBbCiAgICAgICAgICAgICdSV0YnLAogICAgICAgICAgICAnRnVsZW5raSB5YXNlIFJ1d2FuZGEnLAogICAgICAgIF0sCiAgICAgICAgJ1NBUicgPT4gWwogICAgICAgICAgICAnU0FSJywKICAgICAgICAgICAgJ1JpeWFsIHlhc2UgU2F1ZGknLAogICAgICAgIF0sCiAgICAgICAgJ1NDUicgPT4gWwogICAgICAgICAgICAnU0NSJywKICAgICAgICAgICAgJ1J1cGkgeWFzZSBTZXlpc2hlbGknLAogICAgICAgIF0sCiAgICAgICAgJ1NERycgPT4gWwogICAgICAgICAgICAnU0RHJywKICAgICAgICAgICAgJ0RpbmFyaSB5YXNlIFN1ZGFuaScsCiAgICAgICAgXSwKICAgICAgICAnU0RQJyA9PiBbCiAgICAgICAgICAgICdTRFAnLAogICAgICAgICAgICAnUGhhd3VuZGkgeWFzZSBTdWRhbmknLAogICAgICAgIF0sCiAgICAgICAgJ1NIUCcgPT4gWwogICAgICAgICAgICAnU0hQJywKICAgICAgICAgICAgJ1BoYXd1bmRpbmRpIGxhc2VTdCBIZWxlbmEnLAogICAgICAgIF0sCiAgICAgICAgJ1NMRScgPT4gWwogICAgICAgICAgICAnU0xFJywKICAgICAgICAgICAgJ0xleW9uaScsCiAgICAgICAgXSwKICAgICAgICAnU0xMJyA9PiBbCiAgICAgICAgICAgICdTTEwnLAogICAgICAgICAgICAnTGV5b25pICgxOTY04oCUMjAyMiknLAogICAgICAgIF0sCiAgICAgICAgJ1NPUycgPT4gWwogICAgICAgICAgICAnU09TJywKICAgICAgICAgICAgJ1NoaWxpbmdpIHlhc2UgU29tYWxpeWEnLAogICAgICAgIF0sCiAgICAgICAgJ1NURCcgPT4gWwogICAgICAgICAgICAnU1REJywKICAgICAgICAgICAgJ0RvYnJhIHlhc2UgU2FvIFRvbWUgbG8gUHJpbmNpcGUgKDE5NzfigJMyMDE3KScsCiAgICAgICAgXSwKICAgICAgICAnU1ROJyA9PiBbCiAgICAgICAgICAgICdTVE4nLAogICAgICAgICAgICAnRG9icmEgeWFzZSBTYW8gVG9tZSBsbyBQcmluY2lwZScsCiAgICAgICAgXSwKICAgICAgICAnU1pMJyA9PiBbCiAgICAgICAgICAgICdTWkwnLAogICAgICAgICAgICAnTGlsYW5nZW5pJywKICAgICAgICBdLAogICAgICAgICdUTkQnID0+IFsKICAgICAgICAgICAgJ1RORCcsCiAgICAgICAgICAgICdEaW5hcmkgeWFzZSBUdW5pc2l5YScsCiAgICAgICAgXSwKICAgICAgICAnVFpTJyA9PiBbCiAgICAgICAgICAgICdUWlMnLAogICAgICAgICAgICAnU2hpbGluZ2kgeWFzZSBUYW56YW5peWEnLAogICAgICAgIF0sCiAgICAgICAgJ1VHWCcgPT4gWwogICAgICAgICAgICAnVUdYJywKICAgICAgICAgICAgJ1NoaWxpbmdpIHlhc2UgVWdhbmRhJywKICAgICAgICBdLAogICAgICAgICdVU0QnID0+IFsKICAgICAgICAgICAgJ1VTJCcsCiAgICAgICAgICAgICdEb2xhIHlhc2UgQW1lbGlrYScsCiAgICAgICAgXSwKICAgICAgICAnWEFGJyA9PiBbCiAgICAgICAgICAgICdGQ0ZBJywKICAgICAgICAgICAgJ0Z1bGVua2kgQ0ZBIEJFQUMnLAogICAgICAgIF0sCiAgICAgICAgJ1hPRicgPT4gWwogICAgICAgICAgICAnRuKAr0NGQScsCiAgICAgICAgICAgICdGdWxlbmtpIENGQSBCQ0VBTycsCiAgICAgICAgXSwKICAgICAgICAnWkFSJyA9PiBbCiAgICAgICAgICAgICdaQVInLAogICAgICAgICAgICAnUmFuZGkgeWFzZSBBZnJpa2EgeWUgWmFuemknLAogICAgICAgIF0sCiAgICAgICAgJ1pNSycgPT4gWwogICAgICAgICAgICAnWk1LJywKICAgICAgICAgICAgJ0t3YWNoYSB5YXNlIFphbWJpeWEgKDE5NjjigJMyMDEyKScsCiAgICAgICAgXSwKICAgICAgICAnWk1XJyA9PiBbCiAgICAgICAgICAgICdaTVcnLAogICAgICAgICAgICAnS3dhY2hhIHlhc2UgWmFtYml5YScsCiAgICAgICAgXSwKICAgICAgICAnWldEJyA9PiBbCiAgICAgICAgICAgICdaV0QnLAogICAgICAgICAgICAnRG9sYSB5YXNlIFppbWJhYndlJywKICAgICAgICBdLAogICAgXSwKXTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";