1707462038
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3Ab11d00e87f9bba315dbb23267539c26e-bfef6cee3f4f9253a45f65fb77537dca
s:31548:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"bfef6cee3f4f9253a45f65fb77537dca";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"fr.php";s:39:" phpDocumentor\Reflection\Php\File path";s:52:"vendor/symfony/intl/Resources/data/currencies/fr.php";s:41:" phpDocumentor\Reflection\Php\File source";s:22735:"<?php

return [
    'Names' => [
        'ADP' => [
            'ADP',
            'peseta andorrane',
        ],
        'AED' => [
            'AED',
            'dirham des Émirats arabes unis',
        ],
        'AFA' => [
            'AFA',
            'afghani (1927–2002)',
        ],
        'AFN' => [
            'AFN',
            'afghani afghan',
        ],
        'ALK' => [
            'ALK',
            'lek albanais (1947–1961)',
        ],
        'ALL' => [
            'ALL',
            'lek albanais',
        ],
        'AMD' => [
            'AMD',
            'dram arménien',
        ],
        'ANG' => [
            'ANG',
            'florin antillais',
        ],
        'AOA' => [
            'AOA',
            'kwanza angolais',
        ],
        'AOK' => [
            'AOK',
            'kwanza angolais (1977–1990)',
        ],
        'AON' => [
            'AON',
            'nouveau kwanza angolais (1990–2000)',
        ],
        'AOR' => [
            'AOR',
            'kwanza angolais réajusté (1995–1999)',
        ],
        'ARA' => [
            'ARA',
            'austral argentin',
        ],
        'ARP' => [
            'ARP',
            'peso argentin (1983–1985)',
        ],
        'ARS' => [
            '$AR',
            'peso argentin',
        ],
        'ATS' => [
            'ATS',
            'schilling autrichien',
        ],
        'AUD' => [
            '$AU',
            'dollar australien',
        ],
        'AWG' => [
            'AWG',
            'florin arubais',
        ],
        'AZM' => [
            'AZM',
            'manat azéri (1993–2006)',
        ],
        'AZN' => [
            'AZN',
            'manat azéri',
        ],
        'BAD' => [
            'BAD',
            'dinar bosniaque',
        ],
        'BAM' => [
            'BAM',
            'mark convertible bosniaque',
        ],
        'BBD' => [
            'BBD',
            'dollar barbadien',
        ],
        'BDT' => [
            'BDT',
            'taka bangladeshi',
        ],
        'BEC' => [
            'BEC',
            'franc belge (convertible)',
        ],
        'BEF' => [
            'FB',
            'franc belge',
        ],
        'BEL' => [
            'BEL',
            'franc belge (financier)',
        ],
        'BGL' => [
            'BGL',
            'lev bulgare (1962–1999)',
        ],
        'BGN' => [
            'BGN',
            'lev bulgare',
        ],
        'BHD' => [
            'BHD',
            'dinar bahreïni',
        ],
        'BIF' => [
            'BIF',
            'franc burundais',
        ],
        'BMD' => [
            '$BM',
            'dollar bermudien',
        ],
        'BND' => [
            '$BN',
            'dollar brunéien',
        ],
        'BOB' => [
            'BOB',
            'boliviano bolivien',
        ],
        'BOP' => [
            'BOP',
            'peso bolivien',
        ],
        'BOV' => [
            'BOV',
            'mvdol bolivien',
        ],
        'BRB' => [
            'BRB',
            'nouveau cruzeiro brésilien (1967–1986)',
        ],
        'BRC' => [
            'BRC',
            'cruzado brésilien (1986–1989)',
        ],
        'BRE' => [
            'BRE',
            'cruzeiro brésilien (1990–1993)',
        ],
        'BRL' => [
            'R$',
            'réal brésilien',
        ],
        'BRN' => [
            'BRN',
            'nouveau cruzado',
        ],
        'BRR' => [
            'BRR',
            'cruzeiro',
        ],
        'BSD' => [
            'BSD',
            'dollar bahaméen',
        ],
        'BTN' => [
            'BTN',
            'ngultrum bouthanais',
        ],
        'BUK' => [
            'BUK',
            'kyat birman',
        ],
        'BWP' => [
            'BWP',
            'pula botswanais',
        ],
        'BYB' => [
            'BYB',
            'nouveau rouble biélorusse (1994–1999)',
        ],
        'BYN' => [
            'BYN',
            'rouble biélorusse',
        ],
        'BYR' => [
            'BYR',
            'rouble biélorusse (2000–2016)',
        ],
        'BZD' => [
            '$BZ',
            'dollar bélizéen',
        ],
        'CAD' => [
            '$CA',
            'dollar canadien',
        ],
        'CDF' => [
            'CDF',
            'franc congolais',
        ],
        'CHE' => [
            'CHE',
            'euro WIR',
        ],
        'CHF' => [
            'CHF',
            'franc suisse',
        ],
        'CHW' => [
            'CHW',
            'franc WIR',
        ],
        'CLF' => [
            'CLF',
            'unité d’investissement chilienne',
        ],
        'CLP' => [
            '$CL',
            'peso chilien',
        ],
        'CNH' => [
            'CNH',
            'yuan chinois (zone extracôtière)',
        ],
        'CNY' => [
            'CNY',
            'yuan renminbi chinois',
        ],
        'COP' => [
            '$CO',
            'peso colombien',
        ],
        'COU' => [
            'COU',
            'unité de valeur réelle colombienne',
        ],
        'CRC' => [
            'CRC',
            'colón costaricain',
        ],
        'CSD' => [
            'CSD',
            'dinar serbo-monténégrin',
        ],
        'CSK' => [
            'CSK',
            'couronne forte tchécoslovaque',
        ],
        'CUC' => [
            'CUC',
            'peso cubain convertible',
        ],
        'CUP' => [
            'CUP',
            'peso cubain',
        ],
        'CVE' => [
            'CVE',
            'escudo capverdien',
        ],
        'CYP' => [
            '£CY',
            'livre chypriote',
        ],
        'CZK' => [
            'CZK',
            'couronne tchèque',
        ],
        'DDM' => [
            'DDM',
            'mark est-allemand',
        ],
        'DEM' => [
            'DEM',
            'mark allemand',
        ],
        'DJF' => [
            'DJF',
            'franc djiboutien',
        ],
        'DKK' => [
            'DKK',
            'couronne danoise',
        ],
        'DOP' => [
            'DOP',
            'peso dominicain',
        ],
        'DZD' => [
            'DZD',
            'dinar algérien',
        ],
        'ECS' => [
            'ECS',
            'sucre équatorien',
        ],
        'ECV' => [
            'ECV',
            'unité de valeur constante équatoriale (UVC)',
        ],
        'EEK' => [
            'EEK',
            'couronne estonienne',
        ],
        'EGP' => [
            'EGP',
            'livre égyptienne',
        ],
        'ERN' => [
            'ERN',
            'nafka érythréen',
        ],
        'ESA' => [
            'ESA',
            'peseta espagnole (compte A)',
        ],
        'ESB' => [
            'ESB',
            'peseta espagnole (compte convertible)',
        ],
        'ESP' => [
            'ESP',
            'peseta espagnole',
        ],
        'ETB' => [
            'ETB',
            'birr éthiopien',
        ],
        'EUR' => [
            '€',
            'euro',
        ],
        'FIM' => [
            'FIM',
            'mark finlandais',
        ],
        'FJD' => [
            '$FJ',
            'dollar fidjien',
        ],
        'FKP' => [
            '£FK',
            'livre des îles Malouines',
        ],
        'FRF' => [
            'F',
            'franc français',
        ],
        'GBP' => [
            '£GB',
            'livre sterling',
        ],
        'GEK' => [
            'GEK',
            'coupon de lari géorgien',
        ],
        'GEL' => [
            'GEL',
            'lari géorgien',
        ],
        'GHC' => [
            'GHC',
            'cédi',
        ],
        'GHS' => [
            'GHS',
            'cédi ghanéen',
        ],
        'GIP' => [
            '£GI',
            'livre de Gibraltar',
        ],
        'GMD' => [
            'GMD',
            'dalasi gambien',
        ],
        'GNF' => [
            'GNF',
            'franc guinéen',
        ],
        'GNS' => [
            'GNS',
            'syli guinéen',
        ],
        'GQE' => [
            'GQE',
            'ekwélé équatoguinéen',
        ],
        'GRD' => [
            'GRD',
            'drachme grecque',
        ],
        'GTQ' => [
            'GTQ',
            'quetzal guatémaltèque',
        ],
        'GWE' => [
            'GWE',
            'escudo de Guinée portugaise',
        ],
        'GWP' => [
            'GWP',
            'peso bissau-guinéen',
        ],
        'GYD' => [
            'GYD',
            'dollar du Guyana',
        ],
        'HKD' => [
            'HKD',
            'dollar de Hong Kong',
        ],
        'HNL' => [
            'HNL',
            'lempira hondurien',
        ],
        'HRD' => [
            'HRD',
            'dinar croate',
        ],
        'HRK' => [
            'HRK',
            'kuna croate',
        ],
        'HTG' => [
            'HTG',
            'gourde haïtienne',
        ],
        'HUF' => [
            'HUF',
            'forint hongrois',
        ],
        'IDR' => [
            'IDR',
            'roupie indonésienne',
        ],
        'IEP' => [
            '£IE',
            'livre irlandaise',
        ],
        'ILP' => [
            '£IL',
            'livre israélienne',
        ],
        'ILS' => [
            '₪',
            'nouveau shekel israélien',
        ],
        'INR' => [
            '₹',
            'roupie indienne',
        ],
        'IQD' => [
            'IQD',
            'dinar irakien',
        ],
        'IRR' => [
            'IRR',
            'riyal iranien',
        ],
        'ISK' => [
            'ISK',
            'couronne islandaise',
        ],
        'ITL' => [
            '₤IT',
            'lire italienne',
        ],
        'JMD' => [
            'JMD',
            'dollar jamaïcain',
        ],
        'JOD' => [
            'JOD',
            'dinar jordanien',
        ],
        'JPY' => [
            'JPY',
            'yen japonais',
        ],
        'KES' => [
            'KES',
            'shilling kényan',
        ],
        'KGS' => [
            'KGS',
            'som kirghize',
        ],
        'KHR' => [
            'KHR',
            'riel cambodgien',
        ],
        'KMF' => [
            'KMF',
            'franc comorien',
        ],
        'KPW' => [
            'KPW',
            'won nord-coréen',
        ],
        'KRW' => [
            '₩',
            'won sud-coréen',
        ],
        'KWD' => [
            'KWD',
            'dinar koweïtien',
        ],
        'KYD' => [
            'KYD',
            'dollar des îles Caïmans',
        ],
        'KZT' => [
            'KZT',
            'tenge kazakh',
        ],
        'LAK' => [
            'LAK',
            'kip laotien',
        ],
        'LBP' => [
            '£LB',
            'livre libanaise',
        ],
        'LKR' => [
            'LKR',
            'roupie srilankaise',
        ],
        'LRD' => [
            'LRD',
            'dollar libérien',
        ],
        'LSL' => [
            'LSL',
            'loti lesothan',
        ],
        'LTL' => [
            'LTL',
            'litas lituanien',
        ],
        'LTT' => [
            'LTT',
            'talonas lituanien',
        ],
        'LUC' => [
            'LUC',
            'franc convertible luxembourgeois',
        ],
        'LUF' => [
            'LUF',
            'franc luxembourgeois',
        ],
        'LUL' => [
            'LUL',
            'franc financier luxembourgeois',
        ],
        'LVL' => [
            'LVL',
            'lats letton',
        ],
        'LVR' => [
            'LVR',
            'rouble letton',
        ],
        'LYD' => [
            'LYD',
            'dinar libyen',
        ],
        'MAD' => [
            'MAD',
            'dirham marocain',
        ],
        'MAF' => [
            'MAF',
            'franc marocain',
        ],
        'MDL' => [
            'MDL',
            'leu moldave',
        ],
        'MGA' => [
            'MGA',
            'ariary malgache',
        ],
        'MGF' => [
            'MGF',
            'franc malgache',
        ],
        'MKD' => [
            'MKD',
            'denar macédonien',
        ],
        'MLF' => [
            'MLF',
            'franc malien',
        ],
        'MMK' => [
            'MMK',
            'kyat myanmarais',
        ],
        'MNT' => [
            'MNT',
            'tugrik mongol',
        ],
        'MOP' => [
            'MOP',
            'pataca macanaise',
        ],
        'MRO' => [
            'MRO',
            'ouguiya mauritanien (1973–2017)',
        ],
        'MRU' => [
            'MRU',
            'ouguiya mauritanien',
        ],
        'MTL' => [
            'MTL',
            'lire maltaise',
        ],
        'MTP' => [
            '£MT',
            'livre maltaise',
        ],
        'MUR' => [
            'MUR',
            'roupie mauricienne',
        ],
        'MVR' => [
            'MVR',
            'rufiyaa maldivienne',
        ],
        'MWK' => [
            'MWK',
            'kwacha malawite',
        ],
        'MXN' => [
            '$MX',
            'peso mexicain',
        ],
        'MXP' => [
            'MXP',
            'peso d’argent mexicain (1861–1992)',
        ],
        'MXV' => [
            'MXV',
            'unité de conversion mexicaine (UDI)',
        ],
        'MYR' => [
            'MYR',
            'ringgit malais',
        ],
        'MZE' => [
            'MZE',
            'escudo mozambicain',
        ],
        'MZM' => [
            'MZM',
            'métical',
        ],
        'MZN' => [
            'MZN',
            'metical mozambicain',
        ],
        'NAD' => [
            '$NA',
            'dollar namibien',
        ],
        'NGN' => [
            'NGN',
            'naira nigérian',
        ],
        'NIC' => [
            'NIC',
            'cordoba',
        ],
        'NIO' => [
            'NIO',
            'córdoba oro nicaraguayen',
        ],
        'NLG' => [
            'NLG',
            'florin néerlandais',
        ],
        'NOK' => [
            'NOK',
            'couronne norvégienne',
        ],
        'NPR' => [
            'NPR',
            'roupie népalaise',
        ],
        'NZD' => [
            '$NZ',
            'dollar néo-zélandais',
        ],
        'OMR' => [
            'OMR',
            'riyal omanais',
        ],
        'PAB' => [
            'PAB',
            'balboa panaméen',
        ],
        'PEI' => [
            'PEI',
            'inti péruvien',
        ],
        'PEN' => [
            'PEN',
            'sol péruvien',
        ],
        'PES' => [
            'PES',
            'sol péruvien (1863–1985)',
        ],
        'PGK' => [
            'PGK',
            'kina papouan-néo-guinéen',
        ],
        'PHP' => [
            'PHP',
            'peso philippin',
        ],
        'PKR' => [
            'PKR',
            'roupie pakistanaise',
        ],
        'PLN' => [
            'PLN',
            'zloty polonais',
        ],
        'PLZ' => [
            'PLZ',
            'zloty (1950–1995)',
        ],
        'PTE' => [
            'PTE',
            'escudo portugais',
        ],
        'PYG' => [
            'PYG',
            'guaraní paraguayen',
        ],
        'QAR' => [
            'QAR',
            'riyal qatari',
        ],
        'RHD' => [
            '$RH',
            'dollar rhodésien',
        ],
        'ROL' => [
            'ROL',
            'ancien leu roumain',
        ],
        'RON' => [
            'RON',
            'leu roumain',
        ],
        'RSD' => [
            'RSD',
            'dinar serbe',
        ],
        'RUB' => [
            'RUB',
            'rouble russe',
        ],
        'RUR' => [
            'RUR',
            'rouble russe (1991–1998)',
        ],
        'RWF' => [
            'RWF',
            'franc rwandais',
        ],
        'SAR' => [
            'SAR',
            'riyal saoudien',
        ],
        'SBD' => [
            '$SB',
            'dollar des îles Salomon',
        ],
        'SCR' => [
            'SCR',
            'roupie des Seychelles',
        ],
        'SDD' => [
            'SDD',
            'dinar soudanais',
        ],
        'SDG' => [
            'SDG',
            'livre soudanaise',
        ],
        'SDP' => [
            'SDP',
            'livre soudanaise (1956–2007)',
        ],
        'SEK' => [
            'SEK',
            'couronne suédoise',
        ],
        'SGD' => [
            '$SG',
            'dollar de Singapour',
        ],
        'SHP' => [
            'SHP',
            'livre de Sainte-Hélène',
        ],
        'SIT' => [
            'SIT',
            'tolar slovène',
        ],
        'SKK' => [
            'SKK',
            'couronne slovaque',
        ],
        'SLE' => [
            'SLE',
            'leone sierra-léonais',
        ],
        'SLL' => [
            'SLL',
            'leone sierra-léonais (1964—2022)',
        ],
        'SOS' => [
            'SOS',
            'shilling somalien',
        ],
        'SRD' => [
            '$SR',
            'dollar surinamais',
        ],
        'SRG' => [
            'SRG',
            'florin surinamais',
        ],
        'SSP' => [
            'SSP',
            'livre sud-soudanaise',
        ],
        'STD' => [
            'STD',
            'dobra santoméen (1977–2017)',
        ],
        'STN' => [
            'STN',
            'dobra santoméen',
        ],
        'SUR' => [
            'SUR',
            'rouble soviétique',
        ],
        'SVC' => [
            'SVC',
            'colón salvadorien',
        ],
        'SYP' => [
            'SYP',
            'livre syrienne',
        ],
        'SZL' => [
            'SZL',
            'lilangeni swazi',
        ],
        'THB' => [
            'THB',
            'baht thaïlandais',
        ],
        'TJR' => [
            'TJR',
            'rouble tadjik',
        ],
        'TJS' => [
            'TJS',
            'somoni tadjik',
        ],
        'TMM' => [
            'TMM',
            'manat turkmène',
        ],
        'TMT' => [
            'TMT',
            'nouveau manat turkmène',
        ],
        'TND' => [
            'TND',
            'dinar tunisien',
        ],
        'TOP' => [
            'TOP',
            'pa’anga tongan',
        ],
        'TPE' => [
            'TPE',
            'escudo timorais',
        ],
        'TRL' => [
            'TRL',
            'livre turque (1844–2005)',
        ],
        'TRY' => [
            'TRY',
            'livre turque',
        ],
        'TTD' => [
            '$TT',
            'dollar de Trinité-et-Tobago',
        ],
        'TWD' => [
            'TWD',
            'nouveau dollar taïwanais',
        ],
        'TZS' => [
            'TZS',
            'shilling tanzanien',
        ],
        'UAH' => [
            'UAH',
            'hryvnia ukrainienne',
        ],
        'UAK' => [
            'UAK',
            'karbovanetz',
        ],
        'UGS' => [
            'UGS',
            'shilling ougandais (1966–1987)',
        ],
        'UGX' => [
            'UGX',
            'shilling ougandais',
        ],
        'USD' => [
            '$US',
            'dollar des États-Unis',
        ],
        'USN' => [
            'USN',
            'dollar des Etats-Unis (jour suivant)',
        ],
        'USS' => [
            'USS',
            'dollar des Etats-Unis (jour même)',
        ],
        'UYI' => [
            'UYI',
            'peso uruguayen (unités indexées)',
        ],
        'UYP' => [
            'UYP',
            'peso uruguayen (1975–1993)',
        ],
        'UYU' => [
            '$UY',
            'peso uruguayen',
        ],
        'UZS' => [
            'UZS',
            'sum ouzbek',
        ],
        'VEB' => [
            'VEB',
            'bolivar vénézuélien (1871–2008)',
        ],
        'VEF' => [
            'VEF',
            'bolivar vénézuélien (2008–2018)',
        ],
        'VES' => [
            'VES',
            'bolivar vénézuélien',
        ],
        'VND' => [
            '₫',
            'dông vietnamien',
        ],
        'VUV' => [
            'VUV',
            'vatu vanuatuan',
        ],
        'WST' => [
            '$WS',
            'tala samoan',
        ],
        'XAF' => [
            'FCFA',
            'franc CFA (BEAC)',
        ],
        'XCD' => [
            'XCD',
            'dollar des Caraïbes orientales',
        ],
        'XEU' => [
            'XEU',
            'unité de compte européenne (ECU)',
        ],
        'XFO' => [
            'XFO',
            'franc or',
        ],
        'XFU' => [
            'XFU',
            'franc UIC',
        ],
        'XOF' => [
            'F CFA',
            'franc CFA (BCEAO)',
        ],
        'XPF' => [
            'FCFP',
            'franc CFP',
        ],
        'XRE' => [
            'XRE',
            'type de fonds RINET',
        ],
        'YDD' => [
            'YDD',
            'dinar du Yémen',
        ],
        'YER' => [
            'YER',
            'riyal yéménite',
        ],
        'YUD' => [
            'YUD',
            'nouveau dinar yougoslave',
        ],
        'YUM' => [
            'YUM',
            'dinar yougoslave Noviy',
        ],
        'YUN' => [
            'YUN',
            'dinar yougoslave convertible',
        ],
        'ZAL' => [
            'ZAL',
            'rand sud-africain (financier)',
        ],
        'ZAR' => [
            'ZAR',
            'rand sud-africain',
        ],
        'ZMK' => [
            'ZMK',
            'kwacha zambien (1968–2012)',
        ],
        'ZMW' => [
            'ZMW',
            'kwacha zambien',
        ],
        'ZRN' => [
            'ZRN',
            'nouveau zaïre zaïrien',
        ],
        'ZRZ' => [
            'ZRZ',
            'zaïre zaïrois',
        ],
        'ZWD' => [
            'ZWD',
            'dollar zimbabwéen',
        ],
        'ZWL' => [
            'ZWL',
            'dollar zimbabwéen (2009)',
        ],
        'ZWR' => [
            'ZWR',
            'dollar zimbabwéen (2008)',
        ],
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";