1707462043
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3A5fda9e241fe1413d0a0674f2c774f7b9-dea7fdb583413f8b216b3a5f60220f81
s:34584:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"dea7fdb583413f8b216b3a5f60220f81";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"mi.php";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/mi.php";s:41:" phpDocumentor\Reflection\Php\File source";s:25012:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'Wā Toharite Kiriwīti (Abidjan)',
        'Africa/Accra' => 'Wā Toharite Kiriwīti (Accra)',
        'Africa/Addis_Ababa' => 'Wā o Āwherika ki te rāwhiti (Addis Ababa)',
        'Africa/Algiers' => 'Wā Uropi Waenga (Algiers)',
        'Africa/Asmera' => 'Wā o Āwherika ki te rāwhiti (Asmara)',
        'Africa/Bamako' => 'Wā Toharite Kiriwīti (Bamako)',
        'Africa/Bangui' => 'Wā o Āwherika ki te uru (Bangui)',
        'Africa/Banjul' => 'Wā Toharite Kiriwīti (Banjul)',
        'Africa/Bissau' => 'Wā Toharite Kiriwīti (Bissau)',
        'Africa/Blantyre' => 'Wā o Te Puku o Āwherika (Blantyre)',
        'Africa/Brazzaville' => 'Wā o Āwherika ki te uru (Brazzaville)',
        'Africa/Bujumbura' => 'Wā o Te Puku o Āwherika (Bujumbura)',
        'Africa/Cairo' => 'Wā Uropi Rāwhiti (Kairo)',
        'Africa/Casablanca' => 'Wā Uropi Uru (Casablanca)',
        'Africa/Ceuta' => 'Wā Uropi Waenga (Ceuta)',
        'Africa/Conakry' => 'Wā Toharite Kiriwīti (Conakry)',
        'Africa/Dakar' => 'Wā Toharite Kiriwīti (Dakar)',
        'Africa/Dar_es_Salaam' => 'Wā o Āwherika ki te rāwhiti (Dar es Salaam)',
        'Africa/Djibouti' => 'Wā o Āwherika ki te rāwhiti (Djibouti)',
        'Africa/Douala' => 'Wā o Āwherika ki te uru (Douala)',
        'Africa/El_Aaiun' => 'Wā Uropi Uru (El Aaiun)',
        'Africa/Freetown' => 'Wā Toharite Kiriwīti (Freetown)',
        'Africa/Gaborone' => 'Wā o Te Puku o Āwherika (Gaborone)',
        'Africa/Harare' => 'Wā o Te Puku o Āwherika (Harare)',
        'Africa/Johannesburg' => 'Wā Arowhānui o Āwherika ki te tonga (Johannesburg)',
        'Africa/Juba' => 'Wā o Te Puku o Āwherika (Juba)',
        'Africa/Kampala' => 'Wā o Āwherika ki te rāwhiti (Kampala)',
        'Africa/Khartoum' => 'Wā o Te Puku o Āwherika (Khartoum)',
        'Africa/Kigali' => 'Wā o Te Puku o Āwherika (Kigali)',
        'Africa/Kinshasa' => 'Wā o Āwherika ki te uru (Kinshasa)',
        'Africa/Lagos' => 'Wā o Āwherika ki te uru (Lagos)',
        'Africa/Libreville' => 'Wā o Āwherika ki te uru (Libreville)',
        'Africa/Lome' => 'Wā Toharite Kiriwīti (Lome)',
        'Africa/Luanda' => 'Wā o Āwherika ki te uru (Luanda)',
        'Africa/Lubumbashi' => 'Wā o Te Puku o Āwherika (Lubumbashi)',
        'Africa/Lusaka' => 'Wā o Te Puku o Āwherika (Lusaka)',
        'Africa/Malabo' => 'Wā o Āwherika ki te uru (Malabo)',
        'Africa/Maputo' => 'Wā o Te Puku o Āwherika (Maputo)',
        'Africa/Maseru' => 'Wā Arowhānui o Āwherika ki te tonga (Maseru)',
        'Africa/Mbabane' => 'Wā Arowhānui o Āwherika ki te tonga (Mbabane)',
        'Africa/Mogadishu' => 'Wā o Āwherika ki te rāwhiti (Mogadishu)',
        'Africa/Monrovia' => 'Wā Toharite Kiriwīti (Monrovia)',
        'Africa/Nairobi' => 'Wā o Āwherika ki te rāwhiti (Ngāiropi)',
        'Africa/Ndjamena' => 'Wā o Āwherika ki te uru (Ndjamena)',
        'Africa/Niamey' => 'Wā o Āwherika ki te uru (Niamey)',
        'Africa/Nouakchott' => 'Wā Toharite Kiriwīti (Nouakchott)',
        'Africa/Ouagadougou' => 'Wā Toharite Kiriwīti (Ouagadougou)',
        'Africa/Porto-Novo' => 'Wā o Āwherika ki te uru (Porto-Novo)',
        'Africa/Sao_Tome' => 'Wā Toharite Kiriwīti (São Tomé)',
        'Africa/Tripoli' => 'Wā Uropi Rāwhiti (Tiriporī)',
        'Africa/Tunis' => 'Wā Uropi Waenga (Tūnīhi)',
        'Africa/Windhoek' => 'Wā o Te Puku o Āwherika (Windhoek)',
        'America/Adak' => 'Wā Hawaii-Aleutian (Adak)',
        'America/Anchorage' => 'Wā Alaska (Anchorage)',
        'America/Anguilla' => 'Wā Ranatiki (Anguilla)',
        'America/Antigua' => 'Wā Ranatiki (Te Motu Nehe)',
        'America/Araguaina' => 'Wā Parīhia (Araguaina)',
        'America/Argentina/La_Rioja' => 'Wā Āketina (La Rioja)',
        'America/Argentina/Rio_Gallegos' => 'Wā Āketina (Rio Gallegos)',
        'America/Argentina/Salta' => 'Wā Āketina (Salta)',
        'America/Argentina/San_Juan' => 'Wā Āketina (San Juan)',
        'America/Argentina/San_Luis' => 'Wā Āketina (San Luis)',
        'America/Argentina/Tucuman' => 'Wā Āketina (Tucuman)',
        'America/Argentina/Ushuaia' => 'Wā Āketina (Ushuaia)',
        'America/Aruba' => 'Wā Ranatiki (Aruba)',
        'America/Asuncion' => 'Wā Parakai (Asunción)',
        'America/Bahia' => 'Wā Parīhia (Bahia)',
        'America/Bahia_Banderas' => 'Wā Waenga (Bahía de Banderas)',
        'America/Barbados' => 'Wā Ranatiki (Papatohe)',
        'America/Belem' => 'Wā Parīhia (Belem)',
        'America/Belize' => 'Wā Waenga (Pērihi)',
        'America/Blanc-Sablon' => 'Wā Ranatiki (Blanc-Sablon)',
        'America/Boa_Vista' => 'Wā Amahona (Boa Vista)',
        'America/Bogota' => 'Wā Koromōpia (Bogota)',
        'America/Boise' => 'Wā Maunga (Boise)',
        'America/Buenos_Aires' => 'Wā Āketina (Buenos Aires)',
        'America/Cambridge_Bay' => 'Wā Maunga (Kemureti Pei)',
        'America/Campo_Grande' => 'Wā Amahona (Campo Grande)',
        'America/Cancun' => 'Wā Rāwhiti (Cancún)',
        'America/Caracas' => 'Wā Penehūera (Caracas)',
        'America/Catamarca' => 'Wā Āketina (Catamarca)',
        'America/Cayenne' => 'Wā Kiāna Wīwī (Cayenne)',
        'America/Cayman' => 'Wā Rāwhiti (Kāmana)',
        'America/Chicago' => 'Wā Waenga (Hikāko)',
        'America/Chihuahua' => 'Wā Waenga (Chihuahua)',
        'America/Ciudad_Juarez' => 'Wā Maunga (Ciudad Juárez)',
        'America/Coral_Harbour' => 'Wā Rāwhiti (Atikokan)',
        'America/Cordoba' => 'Wā Āketina (Cordoba)',
        'America/Costa_Rica' => 'Wā Waenga (Koto Rika)',
        'America/Creston' => 'Wā Maunga (Creston)',
        'America/Cuiaba' => 'Wā Amahona (Cuiaba)',
        'America/Curacao' => 'Wā Ranatiki (Curaçao)',
        'America/Danmarkshavn' => 'Wā Toharite Kiriwīti (Danmarkshavn)',
        'America/Dawson' => 'Wā Yukon (Dawson)',
        'America/Dawson_Creek' => 'Wā Maunga (Dawson Creek)',
        'America/Denver' => 'Wā Maunga (Denver)',
        'America/Detroit' => 'Wā Rāwhiti (Detroit)',
        'America/Dominica' => 'Wā Ranatiki (Tominika)',
        'America/Edmonton' => 'Wā Maunga (Edmonton)',
        'America/Eirunepe' => 'Parīhi Wā (Eirunepe)',
        'America/El_Salvador' => 'Wā Waenga (Whakaora)',
        'America/Fort_Nelson' => 'Wā Maunga (Fort Nelson)',
        'America/Fortaleza' => 'Wā Parīhia (Fortaleza)',
        'America/Glace_Bay' => 'Wā Ranatiki (Glace Bay)',
        'America/Godthab' => 'Wā Whenuakāriki ki te uru (Nuuk)',
        'America/Goose_Bay' => 'Wā Ranatiki (Kuihi Pei)',
        'America/Grand_Turk' => 'Wā Rāwhiti (Tākoru Nui)',
        'America/Grenada' => 'Wā Ranatiki (Kerenata)',
        'America/Guadeloupe' => 'Wā Ranatiki (Guadeloupe)',
        'America/Guatemala' => 'Wā Waenga (Kuatamāra)',
        'America/Guayaquil' => 'Wā Ekuatoa (Guayaquil)',
        'America/Guyana' => 'Wā Kaiana (Guyana)',
        'America/Halifax' => 'Wā Ranatiki (Halifax)',
        'America/Havana' => 'Wā Kiupa (Hawhāna)',
        'America/Hermosillo' => 'Wā Mēhiko Kiwa (Hermosillo)',
        'America/Indiana/Knox' => 'Wā Waenga (Knox, Indiana)',
        'America/Indiana/Marengo' => 'Wā Rāwhiti (Marengo, Indiana)',
        'America/Indiana/Petersburg' => 'Wā Rāwhiti (Petersburg, Indiana)',
        'America/Indiana/Tell_City' => 'Wā Waenga (Tell City, Indiana)',
        'America/Indiana/Vevay' => 'Wā Rāwhiti (Vevay, Indiana)',
        'America/Indiana/Vincennes' => 'Wā Rāwhiti (Vincennes, Indiana)',
        'America/Indiana/Winamac' => 'Wā Rāwhiti (Winamac, Indiana)',
        'America/Indianapolis' => 'Wā Rāwhiti (Indianapolis)',
        'America/Inuvik' => 'Wā Maunga (Inuvik)',
        'America/Iqaluit' => 'Wā Rāwhiti (Iqaluit)',
        'America/Jamaica' => 'Wā Rāwhiti (Hemeika)',
        'America/Jujuy' => 'Wā Āketina (Jujuy)',
        'America/Juneau' => 'Wā Alaska (Juneau)',
        'America/Kentucky/Monticello' => 'Wā Rāwhiti (Monticello, Kentucky)',
        'America/Kralendijk' => 'Wā Ranatiki (Kralendijk)',
        'America/La_Paz' => 'Wā Poriwia (La Paz)',
        'America/Lima' => 'Wā Peru (Lima)',
        'America/Los_Angeles' => 'Wā Kiwa (Ngā Anahera)',
        'America/Louisville' => 'Wā Rāwhiti (Louisville)',
        'America/Lower_Princes' => 'Wā Ranatiki (Lower Prince’s Quarter)',
        'America/Maceio' => 'Wā Parīhia (Maceio)',
        'America/Managua' => 'Wā Waenga (Managua)',
        'America/Manaus' => 'Wā Amahona (Manaus)',
        'America/Marigot' => 'Wā Ranatiki (Marigot)',
        'America/Martinique' => 'Wā Ranatiki (Mātiniki)',
        'America/Matamoros' => 'Wā Waenga (Matamoros)',
        'America/Mazatlan' => 'Wā Mēhiko Kiwa (Mazatlan)',
        'America/Mendoza' => 'Wā Āketina (Mendoza)',
        'America/Menominee' => 'Wā Waenga (Menominee)',
        'America/Merida' => 'Wā Waenga (Mérida)',
        'America/Metlakatla' => 'Wā Alaska (Metlakatla)',
        'America/Mexico_City' => 'Wā Waenga (Mēhiko Tāonenui)',
        'America/Miquelon' => 'Wā St. Pierre me Miquelon',
        'America/Moncton' => 'Wā Ranatiki (Moncton)',
        'America/Monterrey' => 'Wā Waenga (Monterrey)',
        'America/Montevideo' => 'Wā Urukoi (Montevideo)',
        'America/Montserrat' => 'Wā Ranatiki (Montserrat)',
        'America/Nassau' => 'Wā Rāwhiti (Nassau)',
        'America/New_York' => 'Wā Rāwhiti (Te Āporo Nui)',
        'America/Nome' => 'Wā Alaska (Nome)',
        'America/Noronha' => 'Wā Fernando de Noronha',
        'America/North_Dakota/Beulah' => 'Wā Waenga (Beulah, North Dakota)',
        'America/North_Dakota/Center' => 'Wā Waenga (Center, North Dakota)',
        'America/North_Dakota/New_Salem' => 'Wā Waenga (New Salem, North Dakota)',
        'America/Ojinaga' => 'Wā Waenga (Ojinaga)',
        'America/Panama' => 'Wā Rāwhiti (Panama)',
        'America/Paramaribo' => 'Wā Huriname (Paramaribo)',
        'America/Phoenix' => 'Wā Maunga (Phoenix)',
        'America/Port-au-Prince' => 'Wā Rāwhiti (Port-au-Prince)',
        'America/Port_of_Spain' => 'Wā Ranatiki (Port of Spain)',
        'America/Porto_Velho' => 'Wā Amahona (Porto Velho)',
        'America/Puerto_Rico' => 'Wā Ranatiki (Peta Riko)',
        'America/Punta_Arenas' => 'Wā Hiri (Punta Arenas)',
        'America/Rankin_Inlet' => 'Wā Waenga (Rankin Inlet)',
        'America/Recife' => 'Wā Parīhia (Recife)',
        'America/Regina' => 'Wā Waenga (Regina)',
        'America/Resolute' => 'Wā Waenga (Resolute)',
        'America/Rio_Branco' => 'Parīhi Wā (Rio Branco)',
        'America/Santarem' => 'Wā Parīhia (Santarem)',
        'America/Santiago' => 'Wā Hiri (Santiago)',
        'America/Santo_Domingo' => 'Wā Ranatiki (Santo Domingo)',
        'America/Sao_Paulo' => 'Wā Parīhia (Sao Paulo)',
        'America/Scoresbysund' => 'Wā Whenuakāriki ki te rāwhiti (Ittoqqortoormiit)',
        'America/Sitka' => 'Wā Alaska (Sitka)',
        'America/St_Barthelemy' => 'Wā Ranatiki (St. Barthélemy)',
        'America/St_Johns' => 'Wā Newfoundland (Hato Hone)',
        'America/St_Kitts' => 'Wā Ranatiki (St. Kitts)',
        'America/St_Lucia' => 'Wā Ranatiki (Hato Ruihia)',
        'America/St_Thomas' => 'Wā Ranatiki (Hato Tamati)',
        'America/St_Vincent' => 'Wā Ranatiki (Hato Wēneti)',
        'America/Swift_Current' => 'Wā Waenga (Swift Current)',
        'America/Tegucigalpa' => 'Wā Waenga (Tegucigalpa)',
        'America/Thule' => 'Wā Ranatiki (Thule)',
        'America/Tijuana' => 'Wā Kiwa (Tijuana)',
        'America/Toronto' => 'Wā Rāwhiti (Tāroto)',
        'America/Tortola' => 'Wā Ranatiki (Tortola)',
        'America/Vancouver' => 'Wā Kiwa (Te Whanga-a-Kiwa)',
        'America/Whitehorse' => 'Wā Yukon (Whitehorse)',
        'America/Winnipeg' => 'Wā Waenga (Winnipeg)',
        'America/Yakutat' => 'Wā Alaska (Yakutat)',
        'Antarctica/Casey' => 'Te Kōpakatanga ki te Tonga Wā (Casey)',
        'Antarctica/Davis' => 'Wā Rēweti',
        'Antarctica/DumontDUrville' => 'Wā Dumont-d’Urville',
        'Antarctica/Macquarie' => 'Wā Ahitereiria ki te Rāwhiti (Makoare)',
        'Antarctica/Mawson' => 'Wā Mawson',
        'Antarctica/McMurdo' => 'Wā Aotearoa (McMurdo)',
        'Antarctica/Palmer' => 'Wā Hiri (Palmer)',
        'Antarctica/Rothera' => 'Wā Rothera',
        'Antarctica/Syowa' => 'Wā Syowa',
        'Antarctica/Troll' => 'Wā Toharite Kiriwīti (Troll)',
        'Antarctica/Vostok' => 'Wā Vostok',
        'Arctic/Longyearbyen' => 'Wā Uropi Waenga (Longyearbyen)',
        'Asia/Aden' => 'Wā Arāpia (Aden)',
        'Asia/Almaty' => 'Wā Katatānga ki te Rāwhiti (Almaty)',
        'Asia/Amman' => 'Wā Uropi Rāwhiti (Amman)',
        'Asia/Anadyr' => 'Rūhia Wā (Anadyr)',
        'Asia/Aqtau' => 'Wā Katatānga ki te Uru (Aqtau)',
        'Asia/Aqtobe' => 'Wā Katatānga ki te Uru (Aqtobe)',
        'Asia/Ashgabat' => 'Wā Tukumanatānga (Ashgabat)',
        'Asia/Atyrau' => 'Wā Katatānga ki te Uru (Atyrau)',
        'Asia/Baghdad' => 'Wā Arāpia (Pākatata)',
        'Asia/Bahrain' => 'Wā Arāpia (Pāreina)',
        'Asia/Baku' => 'Wā Atepaihānia (Baku)',
        'Asia/Bangkok' => 'Wā Īniahaina (Pangakoko)',
        'Asia/Barnaul' => 'Rūhia Wā (Barnaul)',
        'Asia/Beirut' => 'Wā Uropi Rāwhiti (Beirut)',
        'Asia/Bishkek' => 'Wā Kikitānga (Bishkek)',
        'Asia/Brunei' => 'Wā Poronai Darussalam',
        'Asia/Calcutta' => 'Wā Īnia (Kolkata)',
        'Asia/Chita' => 'Wā Yakutsk (Chita)',
        'Asia/Choibalsan' => 'Wā Ulaanbaatar (Choibalsan)',
        'Asia/Colombo' => 'Wā Īnia (Colombo)',
        'Asia/Damascus' => 'Wā Uropi Rāwhiti (Damascus)',
        'Asia/Dhaka' => 'Wā Pākaratēhi (Dhaka)',
        'Asia/Dili' => 'Wā o Timoa ki te Rāwhiti (Dili)',
        'Asia/Dubai' => 'Wā Whanga Arowhānui (Tupae)',
        'Asia/Dushanbe' => 'Wā Takiritānga (Dushanbe)',
        'Asia/Famagusta' => 'Wā Uropi Rāwhiti (Famagusta)',
        'Asia/Gaza' => 'Wā Uropi Rāwhiti (Kāha)',
        'Asia/Hebron' => 'Wā Uropi Rāwhiti (Hebron)',
        'Asia/Hong_Kong' => 'Wā Hongipua',
        'Asia/Hovd' => 'Wā Hovd',
        'Asia/Irkutsk' => 'Wā Irkutsk',
        'Asia/Jakarta' => 'Wā Initonīhia ki te uru (Tiakāta)',
        'Asia/Jayapura' => 'Wā Initonīhia ki te rāwhiti (Jayapura)',
        'Asia/Jerusalem' => 'Wā Iharaira (Hiruhārama)',
        'Asia/Kabul' => 'Wā Awhekenetāna (Kabul)',
        'Asia/Kamchatka' => 'Rūhia Wā (Kamchatka)',
        'Asia/Karachi' => 'Wā Pakitāne (Karachi)',
        'Asia/Katmandu' => 'Wā Nepōra (Katamarū)',
        'Asia/Khandyga' => 'Wā Yakutsk (Khandyga)',
        'Asia/Krasnoyarsk' => 'Wā Krasnoyarsk',
        'Asia/Kuala_Lumpur' => 'Wā Mareia (Kuara Rūpa)',
        'Asia/Kuching' => 'Wā Mareia (Kuching)',
        'Asia/Kuwait' => 'Wā Arāpia (Kūweiti)',
        'Asia/Macau' => 'Wā Haina (Makau)',
        'Asia/Magadan' => 'Wā Magadan',
        'Asia/Makassar' => 'Wā Initonīhia Waenga (Makassar)',
        'Asia/Manila' => 'Wā Piripīni (Manira)',
        'Asia/Muscat' => 'Wā Whanga Arowhānui (Muscat)',
        'Asia/Nicosia' => 'Wā Uropi Rāwhiti (Nicosia)',
        'Asia/Novokuznetsk' => 'Wā Krasnoyarsk (Novokuznetsk)',
        'Asia/Novosibirsk' => 'Wā Novosibirsk',
        'Asia/Omsk' => 'Wā Omsk',
        'Asia/Oral' => 'Wā Katatānga ki te Uru (Oral)',
        'Asia/Phnom_Penh' => 'Wā Īniahaina (Penoma Pena)',
        'Asia/Pontianak' => 'Wā Initonīhia ki te uru (Pontianak)',
        'Asia/Pyongyang' => 'Wā Kōrea (Pyongyang)',
        'Asia/Qatar' => 'Wā Arāpia (Katā)',
        'Asia/Qostanay' => 'Wā Katatānga ki te Rāwhiti (Qostanay)',
        'Asia/Qyzylorda' => 'Wā Katatānga ki te Uru (Qyzylorda)',
        'Asia/Rangoon' => 'Wā Pēma (Yangon)',
        'Asia/Riyadh' => 'Wā Arāpia (Riata)',
        'Asia/Saigon' => 'Wā Īniahaina (Ho Chi Minh)',
        'Asia/Sakhalin' => 'Wā Sakhalin',
        'Asia/Samarkand' => 'Wā Uhipeketāne (Samarkand)',
        'Asia/Seoul' => 'Wā Kōrea (Houra)',
        'Asia/Shanghai' => 'Wā Haina (Hangahai)',
        'Asia/Singapore' => 'Wā Hingapoa Arowhānui',
        'Asia/Srednekolymsk' => 'Wā Magadan (Srednekolymsk)',
        'Asia/Taipei' => 'Wā Taipei',
        'Asia/Tashkent' => 'Wā Uhipeketāne (Tashkent)',
        'Asia/Tbilisi' => 'Wā Hōria (Tbilisi)',
        'Asia/Tehran' => 'Wā Irāna (Terāna)',
        'Asia/Thimphu' => 'Wā Pūtana (Thimphu)',
        'Asia/Tokyo' => 'Wā Hapani (Tōkio)',
        'Asia/Tomsk' => 'Rūhia Wā (Tomsk)',
        'Asia/Ulaanbaatar' => 'Wā Ulaanbaatar',
        'Asia/Urumqi' => 'Haina Wā (Urumqi)',
        'Asia/Ust-Nera' => 'Wā Vladivostok (Ust-Nera)',
        'Asia/Vientiane' => 'Wā Īniahaina (Vientiane)',
        'Asia/Vladivostok' => 'Wā Vladivostok',
        'Asia/Yakutsk' => 'Wā Yakutsk',
        'Asia/Yekaterinburg' => 'Wā Yekaterinburg',
        'Asia/Yerevan' => 'Wā Āmenia (Yerevan)',
        'Atlantic/Azores' => 'Wā Azores',
        'Atlantic/Bermuda' => 'Wā Ranatiki (Pāmura)',
        'Atlantic/Canary' => 'Wā Uropi Uru (Canary)',
        'Atlantic/Cape_Verde' => 'Wā o Te Kūrae Matomato',
        'Atlantic/Faeroe' => 'Wā Uropi Uru (Faroe)',
        'Atlantic/Madeira' => 'Wā Uropi Uru (Madeira)',
        'Atlantic/Reykjavik' => 'Wā Toharite Kiriwīti (Reykjavik)',
        'Atlantic/South_Georgia' => 'Wā Hōria ki te Tonga',
        'Atlantic/St_Helena' => 'Wā Toharite Kiriwīti (Hato Hērena)',
        'Atlantic/Stanley' => 'Wā ki Ngā Motu Whākana (Stanley)',
        'Australia/Adelaide' => 'Wā Ahitereiria Waenga (Atireira)',
        'Australia/Brisbane' => 'Wā Ahitereiria ki te Rāwhiti (Piripane)',
        'Australia/Broken_Hill' => 'Wā Ahitereiria Waenga (Broken Hill)',
        'Australia/Darwin' => 'Wā Ahitereiria Waenga (Tāwini)',
        'Australia/Eucla' => 'Wā Ahitereiria Waenga-Uru (Eucla)',
        'Australia/Hobart' => 'Wā Ahitereiria ki te Rāwhiti (Hopatāone)',
        'Australia/Lindeman' => 'Wā Ahitereiria ki te Rāwhiti (Lindeman)',
        'Australia/Lord_Howe' => 'Wā Lord Howe',
        'Australia/Melbourne' => 'Wā Ahitereiria ki te Rāwhiti (Poipiripi)',
        'Australia/Perth' => 'Wā Ahitereiria ki te Uru (Pētia)',
        'Australia/Sydney' => 'Wā Ahitereiria ki te Rāwhiti (Poihākena)',
        'CST6CDT' => 'Wā Waenga',
        'EST5EDT' => 'Wā Rāwhiti',
        'Etc/GMT' => 'Wā Toharite Kiriwīti',
        'Etc/UTC' => 'Wā Aonui Kōtuitui',
        'Europe/Amsterdam' => 'Wā Uropi Waenga (Pāpuniāmita)',
        'Europe/Andorra' => 'Wā Uropi Waenga (Anatōra)',
        'Europe/Astrakhan' => 'Wā Mohikau (Astrakhan)',
        'Europe/Athens' => 'Wā Uropi Rāwhiti (Ātene)',
        'Europe/Belgrade' => 'Wā Uropi Waenga (Belgrade)',
        'Europe/Berlin' => 'Wā Uropi Waenga (Pearīni)',
        'Europe/Bratislava' => 'Wā Uropi Waenga (Bratislava)',
        'Europe/Brussels' => 'Wā Uropi Waenga (Paruhi)',
        'Europe/Bucharest' => 'Wā Uropi Rāwhiti (Bucharest)',
        'Europe/Budapest' => 'Wā Uropi Waenga (Putapēhi)',
        'Europe/Busingen' => 'Wā Uropi Waenga (Busingen)',
        'Europe/Chisinau' => 'Wā Uropi Rāwhiti (Chisinau)',
        'Europe/Copenhagen' => 'Wā Uropi Waenga (Kopeheikana)',
        'Europe/Dublin' => 'Wā Toharite Kiriwīti (Tapurini)',
        'Europe/Gibraltar' => 'Wā Uropi Waenga (Gibraltar)',
        'Europe/Guernsey' => 'Wā Toharite Kiriwīti (Guernsey)',
        'Europe/Helsinki' => 'Wā Uropi Rāwhiti (Hēriki)',
        'Europe/Isle_of_Man' => 'Wā Toharite Kiriwīti (Te Moutere Mana)',
        'Europe/Istanbul' => 'Tākei Wā (Itapūru)',
        'Europe/Jersey' => 'Wā Toharite Kiriwīti (Jersey)',
        'Europe/Kaliningrad' => 'Wā Uropi Rāwhiti (Kaliningrad)',
        'Europe/Kiev' => 'Wā Uropi Rāwhiti (Kyiv)',
        'Europe/Kirov' => 'Rūhia Wā (Kirov)',
        'Europe/Lisbon' => 'Wā Uropi Uru (Rīpene)',
        'Europe/Ljubljana' => 'Wā Uropi Waenga (Ljubljana)',
        'Europe/London' => 'Wā Toharite Kiriwīti (Rānana)',
        'Europe/Luxembourg' => 'Wā Uropi Waenga (Rakapuō)',
        'Europe/Madrid' => 'Wā Uropi Waenga (Mātiri)',
        'Europe/Malta' => 'Wā Uropi Waenga (Mārata)',
        'Europe/Mariehamn' => 'Wā Uropi Rāwhiti (Mariehamn)',
        'Europe/Minsk' => 'Wā Mohikau (Minsk)',
        'Europe/Monaco' => 'Wā Uropi Waenga (Monāko)',
        'Europe/Moscow' => 'Wā Mohikau',
        'Europe/Oslo' => 'Wā Uropi Waenga (Ōhoro)',
        'Europe/Paris' => 'Wā Uropi Waenga (Parī)',
        'Europe/Podgorica' => 'Wā Uropi Waenga (Podgorica)',
        'Europe/Prague' => 'Wā Uropi Waenga (Parāka)',
        'Europe/Riga' => 'Wā Uropi Rāwhiti (Riga)',
        'Europe/Rome' => 'Wā Uropi Waenga (Rōma)',
        'Europe/Samara' => 'Rūhia Wā (Samara)',
        'Europe/San_Marino' => 'Wā Uropi Waenga (Hana Marino)',
        'Europe/Sarajevo' => 'Wā Uropi Waenga (Sarajevo)',
        'Europe/Saratov' => 'Wā Mohikau (Saratov)',
        'Europe/Simferopol' => 'Wā Mohikau (Simferopol)',
        'Europe/Skopje' => 'Wā Uropi Waenga (Skopje)',
        'Europe/Sofia' => 'Wā Uropi Rāwhiti (Sofia)',
        'Europe/Stockholm' => 'Wā Uropi Waenga (Tokoomo)',
        'Europe/Tallinn' => 'Wā Uropi Rāwhiti (Tallinn)',
        'Europe/Tirane' => 'Wā Uropi Waenga (Tirane)',
        'Europe/Ulyanovsk' => 'Wā Mohikau (Ulyanovsk)',
        'Europe/Vaduz' => 'Wā Uropi Waenga (Vaduz)',
        'Europe/Vatican' => 'Wā Uropi Waenga (Te Poho-o-Pita)',
        'Europe/Vienna' => 'Wā Uropi Waenga (Whiena)',
        'Europe/Vilnius' => 'Wā Uropi Rāwhiti (Vilnius)',
        'Europe/Volgograd' => 'Wā Volgograd',
        'Europe/Warsaw' => 'Wā Uropi Waenga (Warsaw)',
        'Europe/Zagreb' => 'Wā Uropi Waenga (Zagreb)',
        'Europe/Zurich' => 'Wā Uropi Waenga (Hūrika)',
        'Indian/Antananarivo' => 'Wā o Āwherika ki te rāwhiti (Antananarivo)',
        'Indian/Chagos' => 'Wā o Te Moana Īnia (Chagos)',
        'Indian/Christmas' => 'Wā o Te Moutere Kirihimete',
        'Indian/Cocos' => 'Wā o Ngā Moutere Kokohi',
        'Indian/Comoro' => 'Wā o Āwherika ki te rāwhiti (Komoro)',
        'Indian/Kerguelen' => 'Wā Wīwī o Te Tonga me te Kōpakatanga ki te Tonga (Kerguelen)',
        'Indian/Mahe' => 'Wā Heikere (Mahe)',
        'Indian/Maldives' => 'Wā Māratiri',
        'Indian/Mauritius' => 'Wā Marihi',
        'Indian/Mayotte' => 'Wā o Āwherika ki te rāwhiti (Mayotte)',
        'Indian/Reunion' => 'Wā Reunion (Réunion)',
        'MST7MDT' => 'Wā Maunga',
        'PST8PDT' => 'Wā Kiwa',
        'Pacific/Apia' => 'Wā Āpia',
        'Pacific/Auckland' => 'Wā Aotearoa (Tāmaki Makaurau)',
        'Pacific/Bougainville' => 'Wā Papua Nūkini (Bougainville)',
        'Pacific/Chatham' => 'Wā Rēkohu',
        'Pacific/Easter' => 'Wā ki te Moutere o Aranga (Easter)',
        'Pacific/Efate' => 'Wā Whenuatū (Efate)',
        'Pacific/Enderbury' => 'Wā o Ngā Moutere Phoenix (Enderbury)',
        'Pacific/Fakaofo' => 'Wā Tokerau (Fakaofo)',
        'Pacific/Fiji' => 'Wā Whītī',
        'Pacific/Funafuti' => 'Wā Tūwaru (Funafuti)',
        'Pacific/Galapagos' => 'Wā Galapagos',
        'Pacific/Gambier' => 'Wā Gambier',
        'Pacific/Guadalcanal' => 'Wā o Ngā Motu Horomona (Guadalcanal)',
        'Pacific/Guam' => 'Wā Chamorro Arowhānui (Kuama)',
        'Pacific/Honolulu' => 'Wā Hawaii-Aleutian (Honolulu)',
        'Pacific/Kiritimati' => 'Wā o Ngā Mouter o Te Raina (Kiritimati)',
        'Pacific/Kosrae' => 'Wā Kosrae',
        'Pacific/Kwajalein' => 'Wā o Ngā Motu Māhara (Kwajalein)',
        'Pacific/Majuro' => 'Wā o Ngā Motu Māhara (Majuro)',
        'Pacific/Marquesas' => 'Wā Marquesas',
        'Pacific/Midway' => 'Wā Hāmoa (Midway)',
        'Pacific/Nauru' => 'Wā Nauru',
        'Pacific/Niue' => 'Wā Niue',
        'Pacific/Norfolk' => 'Wā o Te Moutere Nōpoke',
        'Pacific/Noumea' => 'Wā Whenua Kanaki (Nūmea)',
        'Pacific/Pago_Pago' => 'Wā Hāmoa (Pango Pango)',
        'Pacific/Palau' => 'Wā Pārau',
        'Pacific/Pitcairn' => 'Wā Pitcairn',
        'Pacific/Ponape' => 'Wā Ponape (Pohnpei)',
        'Pacific/Port_Moresby' => 'Wā Papua Nūkini (Pota Moahipi)',
        'Pacific/Rarotonga' => 'Wā Kuki Airani (Rarotonga)',
        'Pacific/Saipan' => 'Wā Chamorro Arowhānui (Saipan)',
        'Pacific/Tahiti' => 'Wā Tahiti',
        'Pacific/Tarawa' => 'Wā Kiripati (Tarawa)',
        'Pacific/Tongatapu' => 'Wā Tonga (Tongatapu)',
        'Pacific/Truk' => 'Wā Chuuk',
        'Pacific/Wake' => 'Wā o Te Motu Wake',
        'Pacific/Wallis' => 'Wā Wārihi me Whutuna',
    ],
    'Meta' => [],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";