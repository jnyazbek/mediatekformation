1707462038
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3A43bb1eedb8b03d9ef3c3abb503644468-0328377e9051e50a07a47747cf08e42c
s:32336:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"0328377e9051e50a07a47747cf08e42c";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"hu.php";s:39:" phpDocumentor\Reflection\Php\File path";s:52:"vendor/symfony/intl/Resources/data/currencies/hu.php";s:41:" phpDocumentor\Reflection\Php\File source";s:23325:"<?php

return [
    'Names' => [
        'ADP' => [
            'ADP',
            'Andorrai peseta',
        ],
        'AED' => [
            'AED',
            'EAE-dirham',
        ],
        'AFA' => [
            'AFA',
            'afgán afghani (1927–2002)',
        ],
        'AFN' => [
            'AFN',
            'afgán afghani',
        ],
        'ALK' => [
            'ALK',
            'albán lek (1946–1965)',
        ],
        'ALL' => [
            'ALL',
            'albán lek',
        ],
        'AMD' => [
            'AMD',
            'örmény dram',
        ],
        'ANG' => [
            'ANG',
            'holland antilláki forint',
        ],
        'AOA' => [
            'AOA',
            'angolai kwanza',
        ],
        'AOK' => [
            'AOK',
            'Angolai kwanza (1977–1990)',
        ],
        'AON' => [
            'AON',
            'Angolai új kwanza (1990–2000)',
        ],
        'AOR' => [
            'AOR',
            'Angolai kwanza reajustado (1995–1999)',
        ],
        'ARA' => [
            'ARA',
            'Argentín austral',
        ],
        'ARP' => [
            'ARP',
            'Argentín peso (1983–1985)',
        ],
        'ARS' => [
            'ARS',
            'argentin peso',
        ],
        'ATS' => [
            'ATS',
            'Osztrák schilling',
        ],
        'AUD' => [
            'AUD',
            'ausztrál dollár',
        ],
        'AWG' => [
            'AWG',
            'arubai florin',
        ],
        'AZM' => [
            'AZM',
            'azerbajdzsáni manat (1993–2006)',
        ],
        'AZN' => [
            'AZN',
            'azerbajdzsáni manat',
        ],
        'BAD' => [
            'BAD',
            'Bosznia-hercegovinai dínár (1992–1994)',
        ],
        'BAM' => [
            'BAM',
            'bosznia-hercegovinai konvertibilis márka',
        ],
        'BAN' => [
            'BAN',
            'bosznia-hercegovinai új dínár (1994–1997)',
        ],
        'BBD' => [
            'BBD',
            'barbadosi dollár',
        ],
        'BDT' => [
            'BDT',
            'bangladesi taka',
        ],
        'BEC' => [
            'BEC',
            'Belga frank (konvertibilis)',
        ],
        'BEF' => [
            'BEF',
            'Belga frank',
        ],
        'BEL' => [
            'BEL',
            'Belga frank (pénzügyi)',
        ],
        'BGL' => [
            'BGL',
            'Bolgár kemény leva',
        ],
        'BGM' => [
            'BGM',
            'bolgár szocialista leva',
        ],
        'BGN' => [
            'BGN',
            'bolgár új leva',
        ],
        'BGO' => [
            'BGO',
            'bolgár leva (1879–1952)',
        ],
        'BHD' => [
            'BHD',
            'bahreini dinár',
        ],
        'BIF' => [
            'BIF',
            'burundi frank',
        ],
        'BMD' => [
            'BMD',
            'bermudai dollár',
        ],
        'BND' => [
            'BND',
            'brunei dollár',
        ],
        'BOB' => [
            'BOB',
            'bolíviai boliviano',
        ],
        'BOP' => [
            'BOP',
            'Bolíviai peso',
        ],
        'BOV' => [
            'BOV',
            'Bolíviai mvdol',
        ],
        'BRB' => [
            'BRB',
            'Brazi cruzeiro novo (1967–1986)',
        ],
        'BRC' => [
            'BRC',
            'Brazi cruzado (1986–1989)',
        ],
        'BRE' => [
            'BRE',
            'Brazil cruzeiro (1990–1993)',
        ],
        'BRL' => [
            'BRL',
            'brazil real',
        ],
        'BRN' => [
            'BRN',
            'Brazil cruzado novo (1989–1990)',
        ],
        'BRR' => [
            'BRR',
            'Brazil cruzeiro (1993–1994)',
        ],
        'BSD' => [
            'BSD',
            'bahamai dollár',
        ],
        'BTN' => [
            'BTN',
            'bhutáni ngultrum',
        ],
        'BUK' => [
            'BUK',
            'Burmai kyat',
        ],
        'BWP' => [
            'BWP',
            'botswanai pula',
        ],
        'BYB' => [
            'BYB',
            'Fehérorosz új rubel (1994–1999)',
        ],
        'BYN' => [
            'BYN',
            'belarusz rubel',
        ],
        'BYR' => [
            'BYR',
            'fehérorosz rubel (2000–2016)',
        ],
        'BZD' => [
            'BZD',
            'belize-i dollár',
        ],
        'CAD' => [
            'CAD',
            'kanadai dollár',
        ],
        'CDF' => [
            'CDF',
            'kongói frank',
        ],
        'CHE' => [
            'CHE',
            'WIR euro',
        ],
        'CHF' => [
            'CHF',
            'svájci frank',
        ],
        'CHW' => [
            'CHW',
            'WIR frank',
        ],
        'CLF' => [
            'CLF',
            'Chilei unidades de fomento',
        ],
        'CLP' => [
            'CLP',
            'chilei peso',
        ],
        'CNH' => [
            'CNH',
            'kínai jüan (offshore)',
        ],
        'CNY' => [
            'CNY',
            'kínai jüan',
        ],
        'COP' => [
            'COP',
            'kolumbiai peso',
        ],
        'COU' => [
            'COU',
            'Unidad de Valor Real',
        ],
        'CRC' => [
            'CRC',
            'Costa Rica-i colon',
        ],
        'CSD' => [
            'CSD',
            'szerb dinár',
        ],
        'CSK' => [
            'CSK',
            'Csehszlovák kemény korona',
        ],
        'CUC' => [
            'CUC',
            'kubai konvertibilis peso',
        ],
        'CUP' => [
            'CUP',
            'kubai peso',
        ],
        'CVE' => [
            'CVE',
            'Zöld-foki escudo',
        ],
        'CYP' => [
            'CYP',
            'Ciprusi font',
        ],
        'CZK' => [
            'CZK',
            'cseh korona',
        ],
        'DDM' => [
            'DDM',
            'Kelet-Német márka',
        ],
        'DEM' => [
            'DEM',
            'Német márka',
        ],
        'DJF' => [
            'DJF',
            'dzsibuti frank',
        ],
        'DKK' => [
            'DKK',
            'dán korona',
        ],
        'DOP' => [
            'DOP',
            'dominikai peso',
        ],
        'DZD' => [
            'DZD',
            'algériai dínár',
        ],
        'ECS' => [
            'ECS',
            'Ecuadori sucre',
        ],
        'ECV' => [
            'ECV',
            'Ecuadori Unidad de Valor Constante (UVC)',
        ],
        'EEK' => [
            'EEK',
            'Észt korona',
        ],
        'EGP' => [
            'EGP',
            'egyiptomi font',
        ],
        'ERN' => [
            'ERN',
            'eritreai nakfa',
        ],
        'ESA' => [
            'ESA',
            'spanyol peseta (A–kontó)',
        ],
        'ESB' => [
            'ESB',
            'spanyol peseta (konvertibilis kontó)',
        ],
        'ESP' => [
            'ESP',
            'Spanyol peseta',
        ],
        'ETB' => [
            'ETB',
            'etiópiai birr',
        ],
        'EUR' => [
            'EUR',
            'euró',
        ],
        'FIM' => [
            'FIM',
            'Finn markka',
        ],
        'FJD' => [
            'FJD',
            'fidzsi dollár',
        ],
        'FKP' => [
            'FKP',
            'falkland-szigeteki font',
        ],
        'FRF' => [
            'FRF',
            'Francia frank',
        ],
        'GBP' => [
            'GBP',
            'angol font',
        ],
        'GEK' => [
            'GEK',
            'Grúz kupon larit',
        ],
        'GEL' => [
            'GEL',
            'grúz lari',
        ],
        'GHC' => [
            'GHC',
            'Ghánai cedi (1979–2007)',
        ],
        'GHS' => [
            'GHS',
            'ghánai cedi',
        ],
        'GIP' => [
            'GIP',
            'gibraltári font',
        ],
        'GMD' => [
            'GMD',
            'gambiai dalasi',
        ],
        'GNF' => [
            'GNF',
            'guineai frank',
        ],
        'GNS' => [
            'GNS',
            'Guineai syli',
        ],
        'GQE' => [
            'GQE',
            'Egyenlítői-guineai ekwele guineana',
        ],
        'GRD' => [
            'GRD',
            'Görög drachma',
        ],
        'GTQ' => [
            'GTQ',
            'guatemalai quetzal',
        ],
        'GWE' => [
            'GWE',
            'Portugál guinea escudo',
        ],
        'GWP' => [
            'GWP',
            'Guinea-Bissaui peso',
        ],
        'GYD' => [
            'GYD',
            'guyanai dollár',
        ],
        'HKD' => [
            'HKD',
            'hongkongi dollár',
        ],
        'HNL' => [
            'HNL',
            'hodurasi lempira',
        ],
        'HRD' => [
            'HRD',
            'Horvát dínár',
        ],
        'HRK' => [
            'HRK',
            'horvát kuna',
        ],
        'HTG' => [
            'HTG',
            'haiti gourde',
        ],
        'HUF' => [
            'Ft',
            'magyar forint',
        ],
        'IDR' => [
            'IDR',
            'indonéz rúpia',
        ],
        'IEP' => [
            'IEP',
            'Ír font',
        ],
        'ILP' => [
            'ILP',
            'Izraeli font',
        ],
        'ILS' => [
            'ILS',
            'izraeli új sékel',
        ],
        'INR' => [
            'INR',
            'indiai rúpia',
        ],
        'IQD' => [
            'IQD',
            'iraki dínár',
        ],
        'IRR' => [
            'IRR',
            'iráni rial',
        ],
        'ISK' => [
            'ISK',
            'izlandi korona',
        ],
        'ITL' => [
            'ITL',
            'Olasz líra',
        ],
        'JMD' => [
            'JMD',
            'jamaicai dollár',
        ],
        'JOD' => [
            'JOD',
            'jordániai dínár',
        ],
        'JPY' => [
            '¥',
            'japán jen',
        ],
        'KES' => [
            'KES',
            'kenyai shilling',
        ],
        'KGS' => [
            'KGS',
            'kirgizisztáni szom',
        ],
        'KHR' => [
            'KHR',
            'kambodzsai riel',
        ],
        'KMF' => [
            'KMF',
            'comorei frank',
        ],
        'KPW' => [
            'KPW',
            'észak-koreai won',
        ],
        'KRW' => [
            'KRW',
            'dél-koreai won',
        ],
        'KWD' => [
            'KWD',
            'kuvaiti dínár',
        ],
        'KYD' => [
            'KYD',
            'kajmán-szigeteki dollár',
        ],
        'KZT' => [
            'KZT',
            'kazahsztáni tenge',
        ],
        'LAK' => [
            'LAK',
            'laoszi kip',
        ],
        'LBP' => [
            'LBP',
            'libanoni font',
        ],
        'LKR' => [
            'LKR',
            'Srí Lanka-i rúpia',
        ],
        'LRD' => [
            'LRD',
            'libériai dollár',
        ],
        'LSL' => [
            'LSL',
            'lesothoi loti',
        ],
        'LTL' => [
            'LTL',
            'litvániai litas',
        ],
        'LTT' => [
            'LTT',
            'Litvániai talonas',
        ],
        'LUC' => [
            'LUC',
            'luxemburgi konvertibilis frank',
        ],
        'LUF' => [
            'LUF',
            'Luxemburgi frank',
        ],
        'LUL' => [
            'LUL',
            'luxemburgi pénzügyi frank',
        ],
        'LVL' => [
            'LVL',
            'lett lats',
        ],
        'LVR' => [
            'LVR',
            'Lett rubel',
        ],
        'LYD' => [
            'LYD',
            'líbiai dínár',
        ],
        'MAD' => [
            'MAD',
            'marokkói dirham',
        ],
        'MAF' => [
            'MAF',
            'Marokkói frank',
        ],
        'MDC' => [
            'MDC',
            'moldáv kupon',
        ],
        'MDL' => [
            'MDL',
            'moldován lei',
        ],
        'MGA' => [
            'MGA',
            'madagaszkári ariary',
        ],
        'MGF' => [
            'MGF',
            'Madagaszkári frank',
        ],
        'MKD' => [
            'MKD',
            'macedon dínár',
        ],
        'MKN' => [
            'MKN',
            'macedón dénár (1992–1993)',
        ],
        'MLF' => [
            'MLF',
            'Mali frank',
        ],
        'MMK' => [
            'MMK',
            'mianmari kyat',
        ],
        'MNT' => [
            'MNT',
            'mongóliai tugrik',
        ],
        'MOP' => [
            'MOP',
            'makaói pataca',
        ],
        'MRO' => [
            'MRO',
            'mauritániai ouguiya (1973–2017)',
        ],
        'MRU' => [
            'MRU',
            'mauritániai ouguiya',
        ],
        'MTL' => [
            'MTL',
            'Máltai líra',
        ],
        'MTP' => [
            'MTP',
            'Máltai font',
        ],
        'MUR' => [
            'MUR',
            'mauritiusi rúpia',
        ],
        'MVR' => [
            'MVR',
            'maldív-szigeteki rufiyaa',
        ],
        'MWK' => [
            'MWK',
            'malawi kwacha',
        ],
        'MXN' => [
            'MXN',
            'mexikói peso',
        ],
        'MXP' => [
            'MXP',
            'Mexikói ezüst peso (1861–1992)',
        ],
        'MXV' => [
            'MXV',
            'Mexikói Unidad de Inversion (UDI)',
        ],
        'MYR' => [
            'MYR',
            'malajziai ringgit',
        ],
        'MZE' => [
            'MZE',
            'Mozambik escudo',
        ],
        'MZM' => [
            'MZM',
            'Mozambik metical',
        ],
        'MZN' => [
            'MZN',
            'mozambiki metikális',
        ],
        'NAD' => [
            'NAD',
            'namíbiai dollár',
        ],
        'NGN' => [
            'NGN',
            'nigériai naira',
        ],
        'NIC' => [
            'NIC',
            'Nikaraguai cordoba',
        ],
        'NIO' => [
            'NIO',
            'nicaraguai córdoba',
        ],
        'NLG' => [
            'NLG',
            'Holland forint',
        ],
        'NOK' => [
            'NOK',
            'norvég korona',
        ],
        'NPR' => [
            'NPR',
            'nepáli rúpia',
        ],
        'NZD' => [
            'NZD',
            'új-zélandi dollár',
        ],
        'OMR' => [
            'OMR',
            'ománi rial',
        ],
        'PAB' => [
            'PAB',
            'panamai balboa',
        ],
        'PEI' => [
            'PEI',
            'perui inti',
        ],
        'PEN' => [
            'PEN',
            'perui sol',
        ],
        'PES' => [
            'PES',
            'perui sol (1863–1965)',
        ],
        'PGK' => [
            'PGK',
            'pápua új-guineai kina',
        ],
        'PHP' => [
            'PHP',
            'fülöp-szigeteki peso',
        ],
        'PKR' => [
            'PKR',
            'pakisztáni rúpia',
        ],
        'PLN' => [
            'PLN',
            'lengyel zloty',
        ],
        'PLZ' => [
            'PLZ',
            'Lengyel zloty (1950–1995)',
        ],
        'PTE' => [
            'PTE',
            'Portugál escudo',
        ],
        'PYG' => [
            'PYG',
            'paraguayi guarani',
        ],
        'QAR' => [
            'QAR',
            'katari rial',
        ],
        'RHD' => [
            'RHD',
            'rhodéziai dollár',
        ],
        'ROL' => [
            'ROL',
            'román lej (1952–2006)',
        ],
        'RON' => [
            'RON',
            'román lej',
        ],
        'RSD' => [
            'RSD',
            'szerb dínár',
        ],
        'RUB' => [
            'RUB',
            'orosz rubel',
        ],
        'RUR' => [
            'RUR',
            'orosz rubel (1991–1998)',
        ],
        'RWF' => [
            'RWF',
            'ruandai frank',
        ],
        'SAR' => [
            'SAR',
            'szaúdi riyal',
        ],
        'SBD' => [
            'SBD',
            'salamon-szigeteki dollár',
        ],
        'SCR' => [
            'SCR',
            'seychelle-szigeteki rúpia',
        ],
        'SDD' => [
            'SDD',
            'Szudáni dínár (1992–2007)',
        ],
        'SDG' => [
            'SDG',
            'szudáni font',
        ],
        'SDP' => [
            'SDP',
            'Szudáni font (1957–1998)',
        ],
        'SEK' => [
            'SEK',
            'svéd korona',
        ],
        'SGD' => [
            'SGD',
            'szingapúri dollár',
        ],
        'SHP' => [
            'SHP',
            'Szent Ilona-i font',
        ],
        'SIT' => [
            'SIT',
            'Szlovén tolar',
        ],
        'SKK' => [
            'SKK',
            'Szlovák korona',
        ],
        'SLE' => [
            'SLE',
            'Sierra Leone-i leone',
        ],
        'SLL' => [
            'SLL',
            'Sierra Leone-i leone (1964—2022)',
        ],
        'SOS' => [
            'SOS',
            'szomáli shilling',
        ],
        'SRD' => [
            'SRD',
            'suriname-i dollár',
        ],
        'SRG' => [
            'SRG',
            'Suriname-i gulden',
        ],
        'SSP' => [
            'SSP',
            'dél-szudáni font',
        ],
        'STD' => [
            'STD',
            'São Tomé és Príncipe-i dobra (1977–2017)',
        ],
        'STN' => [
            'STN',
            'São Tomé és Príncipe-i dobra',
        ],
        'SUR' => [
            'SUR',
            'Szovjet rubel',
        ],
        'SVC' => [
            'SVC',
            'Salvadori colón',
        ],
        'SYP' => [
            'SYP',
            'szíriai font',
        ],
        'SZL' => [
            'SZL',
            'szvázi lilangeni',
        ],
        'THB' => [
            'THB',
            'thai baht',
        ],
        'TJR' => [
            'TJR',
            'Tádzsikisztáni rubel',
        ],
        'TJS' => [
            'TJS',
            'tádzsikisztáni somoni',
        ],
        'TMM' => [
            'TMM',
            'türkmenisztáni manat (1993–2009)',
        ],
        'TMT' => [
            'TMT',
            'türkmenisztáni manat',
        ],
        'TND' => [
            'TND',
            'tunéziai dínár',
        ],
        'TOP' => [
            'TOP',
            'tongai paanga',
        ],
        'TPE' => [
            'TPE',
            'Timori escudo',
        ],
        'TRL' => [
            'TRL',
            'török líra (1922–2005)',
        ],
        'TRY' => [
            'TRY',
            'török líra',
        ],
        'TTD' => [
            'TTD',
            'Trinidad és Tobago-i dollár',
        ],
        'TWD' => [
            'TWD',
            'tajvani új dollár',
        ],
        'TZS' => [
            'TZS',
            'tanzániai shilling',
        ],
        'UAH' => [
            'UAH',
            'ukrán hrivnya',
        ],
        'UAK' => [
            'UAK',
            'Ukrán karbovanec',
        ],
        'UGS' => [
            'UGS',
            'Ugandai shilling (1966–1987)',
        ],
        'UGX' => [
            'UGX',
            'ugandai shilling',
        ],
        'USD' => [
            'USD',
            'USA-dollár',
        ],
        'USN' => [
            'USN',
            'USA dollár (következő napi)',
        ],
        'USS' => [
            'USS',
            'USA dollár (aznapi)',
        ],
        'UYI' => [
            'UYI',
            'Uruguayi peso en unidades indexadas',
        ],
        'UYP' => [
            'UYP',
            'Uruguay-i peso (1975–1993)',
        ],
        'UYU' => [
            'UYU',
            'uruguay-i peso',
        ],
        'UZS' => [
            'UZS',
            'üzbegisztáni szum',
        ],
        'VEB' => [
            'VEB',
            'Venezuelai bolivar (1871–2008)',
        ],
        'VEF' => [
            'VEF',
            'venezuelai bolivar (2008–2018)',
        ],
        'VES' => [
            'VES',
            'venezuelai bolivar',
        ],
        'VND' => [
            'VND',
            'vietnámi dong',
        ],
        'VNN' => [
            'VNN',
            'vietnámi dong (1978–1985)',
        ],
        'VUV' => [
            'VUV',
            'vanuatui vatu',
        ],
        'WST' => [
            'WST',
            'nyugat-szamoai tala',
        ],
        'XAF' => [
            'FCFA',
            'CFA frank BEAC',
        ],
        'XCD' => [
            'XCD',
            'kelet-karibi dollár',
        ],
        'XEU' => [
            'XEU',
            'európai pénznemegység',
        ],
        'XFO' => [
            'XFO',
            'Francia arany frank',
        ],
        'XFU' => [
            'XFU',
            'Francia UIC-frank',
        ],
        'XOF' => [
            'F CFA',
            'CFA frank BCEAO',
        ],
        'XPF' => [
            'CFPF',
            'csendes-óceáni valutaközösségi frank',
        ],
        'XRE' => [
            'XRE',
            'RINET tőke',
        ],
        'YDD' => [
            'YDD',
            'Jemeni dínár',
        ],
        'YER' => [
            'YER',
            'jemeni rial',
        ],
        'YUD' => [
            'YUD',
            'Jugoszláv kemény dínár',
        ],
        'YUM' => [
            'YUM',
            'Jugoszláv új dínár',
        ],
        'YUN' => [
            'YUN',
            'Jugoszláv konvertibilis dínár',
        ],
        'YUR' => [
            'YUR',
            'jugoszláv reformált dinár (1992–1993)',
        ],
        'ZAL' => [
            'ZAL',
            'Dél-afrikai rand (pénzügyi)',
        ],
        'ZAR' => [
            'ZAR',
            'dél-afrikai rand',
        ],
        'ZMK' => [
            'ZMK',
            'Zambiai kwacha (1968–2012)',
        ],
        'ZMW' => [
            'ZMW',
            'zambiai kwacha',
        ],
        'ZRN' => [
            'ZRN',
            'Zairei új zaire',
        ],
        'ZRZ' => [
            'ZRZ',
            'Zairei zaire',
        ],
        'ZWD' => [
            'ZWD',
            'Zimbabwei dollár (1980–2008)',
        ],
        'ZWL' => [
            'ZWL',
            'Zimbabwei dollár (2009)',
        ],
        'ZWR' => [
            'ZWR',
            'Zimbabwei dollár (2008)',
        ],
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";