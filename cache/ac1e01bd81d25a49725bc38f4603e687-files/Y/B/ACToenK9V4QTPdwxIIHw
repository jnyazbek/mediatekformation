1707462039
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3A6bf84cf4de244c998236eb91238ff9a8-f6c2e8f11c86ee57cbfb4449641d0a4d
s:34672:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"f6c2e8f11c86ee57cbfb4449641d0a4d";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"sc.php";s:39:" phpDocumentor\Reflection\Php\File path";s:52:"vendor/symfony/intl/Resources/data/currencies/sc.php";s:41:" phpDocumentor\Reflection\Php\File source";s:25077:"<?php

return [
    'Names' => [
        'ADP' => [
            'ADP',
            'peseta andorrana',
        ],
        'AED' => [
            'AED',
            'dirham de sos Emirados Àrabos Unidos',
        ],
        'AFA' => [
            'AFA',
            'afgani afganu (1927–2002)',
        ],
        'AFN' => [
            'AFN',
            'afgani afganu',
        ],
        'ALK' => [
            'ALK',
            'lek albanesu (1946–1965)',
        ],
        'ALL' => [
            'ALL',
            'lek albanesu',
        ],
        'AMD' => [
            'AMD',
            'dram armenu',
        ],
        'ANG' => [
            'ANG',
            'fiorinu de sas Antillas Olandesas',
        ],
        'AOA' => [
            'AOA',
            'kwanza angolanu',
        ],
        'AOK' => [
            'AOK',
            'kwanza angolanu (1977–1991)',
        ],
        'AON' => [
            'AON',
            'kwanza nou angolanu (1990–2000)',
        ],
        'AOR' => [
            'AOR',
            'kwanza ri-acontzadu angolanu (1995–1999)',
        ],
        'ARA' => [
            'ARA',
            'austral argentinu',
        ],
        'ARL' => [
            'ARL',
            'peso ley argentinu (1970–1983)',
        ],
        'ARM' => [
            'ARM',
            'peso argentinu (1881–1970)',
        ],
        'ARP' => [
            'ARP',
            'peso argentinu (1983–1985)',
        ],
        'ARS' => [
            'ARS',
            'peso argentinu',
        ],
        'ATS' => [
            'ATS',
            'iscellinu austrìacu',
        ],
        'AUD' => [
            'A$',
            'dòllaru australianu',
        ],
        'AWG' => [
            'AWG',
            'fiorinu arubanu',
        ],
        'AZM' => [
            'AZM',
            'manat azeru (1993–2006)',
        ],
        'AZN' => [
            'AZN',
            'manat azeru',
        ],
        'BAD' => [
            'BAD',
            'dinar de sa Bòsnia-Erzegòvina (1992–1994)',
        ],
        'BAM' => [
            'BAM',
            'marcu cunvertìbile de sa Bòsnia-Erzegòvina',
        ],
        'BAN' => [
            'BAN',
            'dinar de sa Bòsnia-Erzegòvina (1994–1997)',
        ],
        'BBD' => [
            'BBD',
            'dòllaru barbadianu',
        ],
        'BDT' => [
            'BDT',
            'taka bangladesu',
        ],
        'BEC' => [
            'BEC',
            'francu belga (cunvertìbile)',
        ],
        'BEF' => [
            'BEF',
            'francu belga',
        ],
        'BEL' => [
            'BEL',
            'francu belga (finantziàriu)',
        ],
        'BGL' => [
            'BGL',
            'lev bùlgaru (1962–1999)',
        ],
        'BGM' => [
            'BGM',
            'lev sotzialista bùlgaru',
        ],
        'BGN' => [
            'BGN',
            'lev bùlgaru',
        ],
        'BGO' => [
            'BGO',
            'lev bùlgaru (1879–1952)',
        ],
        'BHD' => [
            'BHD',
            'dinar bahreinu',
        ],
        'BIF' => [
            'BIF',
            'francu burundianu',
        ],
        'BMD' => [
            'BMD',
            'dòllaru de sas Bermudas',
        ],
        'BND' => [
            'BND',
            'dòllaru de su Brunei',
        ],
        'BOB' => [
            'BOB',
            'bolivianu',
        ],
        'BOL' => [
            'BOL',
            'bolivianu (1863–1963)',
        ],
        'BOP' => [
            'BOP',
            'peso bolivianu',
        ],
        'BOV' => [
            'BOV',
            'mvdol bolivianu',
        ],
        'BRB' => [
            'BRB',
            'cruzèiru nou brasilianu (1967–1986)',
        ],
        'BRC' => [
            'BRC',
            'cruzadu brasilianu (1986–1989)',
        ],
        'BRE' => [
            'BRE',
            'cruzèiru brasilianu (1990–1993)',
        ],
        'BRL' => [
            'R$',
            'real brasilianu',
        ],
        'BRN' => [
            'BRN',
            'cruzadu nou brasilianu (1989–1990)',
        ],
        'BRR' => [
            'BRR',
            'cruzèiru brasilianu (1993–1994)',
        ],
        'BRZ' => [
            'BRZ',
            'cruzèiru brasilianu (1942–1967)',
        ],
        'BSD' => [
            'BSD',
            'dòllaru bahamesu',
        ],
        'BTN' => [
            'BTN',
            'ngultrum bhutanesu',
        ],
        'BUK' => [
            'BUK',
            'kyat birmanu',
        ],
        'BWP' => [
            'BWP',
            'pula botswanesa',
        ],
        'BYB' => [
            'BYB',
            'rublu bielorussu (1994–1999)',
        ],
        'BYN' => [
            'BYN',
            'rublu bielorussu',
        ],
        'BYR' => [
            'BYR',
            'rublu bielorussu (2000–2016)',
        ],
        'BZD' => [
            'BZD',
            'dòllaru de su Belize',
        ],
        'CAD' => [
            'CA$',
            'dòllaru canadesu',
        ],
        'CDF' => [
            'CDF',
            'francu congolesu',
        ],
        'CHE' => [
            'CHE',
            'euro WIR',
        ],
        'CHF' => [
            'CHF',
            'francu isvìtzeru',
        ],
        'CHW' => [
            'CHW',
            'francu WIR',
        ],
        'CLE' => [
            'CLE',
            'iscudu tzilenu',
        ],
        'CLF' => [
            'CLF',
            'unidade de acontu tzilena (UF)',
        ],
        'CLP' => [
            'CLP',
            'peso tzilenu',
        ],
        'CNH' => [
            'CNH',
            'renminbi tzinesu (extracontinentale)',
        ],
        'CNX' => [
            'CNX',
            'dòllaru de sa Banca Popolare Tzinesa',
        ],
        'CNY' => [
            'CN¥',
            'renminbi tzinesu',
        ],
        'COP' => [
            'COP',
            'peso colombianu',
        ],
        'COU' => [
            'COU',
            'unidade de valore reale colombiana',
        ],
        'CRC' => [
            'CRC',
            'colón costaricanu',
        ],
        'CSD' => [
            'CSD',
            'dinar serbu (2002–2006)',
        ],
        'CSK' => [
            'CSK',
            'corona forte tzecoslovaca',
        ],
        'CUC' => [
            'CUC',
            'peso cubanu cunvertìbile',
        ],
        'CUP' => [
            'CUP',
            'peso cubanu',
        ],
        'CVE' => [
            'CVE',
            'iscudu cabubirdianu',
        ],
        'CYP' => [
            'CYP',
            'isterlina tzipriota',
        ],
        'CZK' => [
            'CZK',
            'corona tzeca',
        ],
        'DDM' => [
            'DDM',
            'marcu de sa Germània orientale',
        ],
        'DEM' => [
            'DEM',
            'marcu tedescu',
        ],
        'DJF' => [
            'DJF',
            'francu gibutianu',
        ],
        'DKK' => [
            'DKK',
            'corona danesa',
        ],
        'DOP' => [
            'DOP',
            'peso dominicanu',
        ],
        'DZD' => [
            'DZD',
            'dinar algerinu',
        ],
        'ECS' => [
            'ECS',
            'sucre ecuadorenu',
        ],
        'ECV' => [
            'ECV',
            'unidade de valore costante ecuadorena',
        ],
        'EEK' => [
            'EEK',
            'corona estonesa',
        ],
        'EGP' => [
            'EGP',
            'isterlina egitziana',
        ],
        'ERN' => [
            'ERN',
            'nafka eritreu',
        ],
        'ESA' => [
            'ESA',
            'peseta ispagnola (contu A)',
        ],
        'ESB' => [
            'ESB',
            'peseta ispagnola (contu cunvertìbile)',
        ],
        'ESP' => [
            'ESP',
            'peseta ispagnola',
        ],
        'ETB' => [
            'ETB',
            'birr etìope',
        ],
        'EUR' => [
            '€',
            'èuro',
        ],
        'FIM' => [
            'FIM',
            'marcu finlandesu',
        ],
        'FJD' => [
            'FJD',
            'dòllaru fijianu',
        ],
        'FKP' => [
            'FKP',
            'isterlina de sas ìsulas Falklands',
        ],
        'FRF' => [
            'FRF',
            'francu frantzesu',
        ],
        'GBP' => [
            '£',
            'isterlina britànnica',
        ],
        'GEK' => [
            'GEK',
            'kupon larit georgianu',
        ],
        'GEL' => [
            'GEL',
            'lari georgianu',
        ],
        'GHC' => [
            'GHC',
            'cedi ganesu (1979–2007)',
        ],
        'GHS' => [
            'GHS',
            'cedi ganesu',
        ],
        'GIP' => [
            'GIP',
            'isterlina de Gibilterra',
        ],
        'GMD' => [
            'GMD',
            'dalasi gambianu',
        ],
        'GNF' => [
            'GNF',
            'francu guineanu',
        ],
        'GNS' => [
            'GNS',
            'syli guineanu',
        ],
        'GQE' => [
            'GQE',
            'ekwele de sa Guinea Ecuadoriana',
        ],
        'GRD' => [
            'GRD',
            'dracma greca',
        ],
        'GTQ' => [
            'GTQ',
            'quetzal guatemaltecu',
        ],
        'GWE' => [
            'GWE',
            'iscudu de sa Guinea portoghesa',
        ],
        'GWP' => [
            'GWP',
            'peso de sa Guinea-Bissau',
        ],
        'GYD' => [
            'GYD',
            'dòllaru guyanesu',
        ],
        'HKD' => [
            'HK$',
            'dòllaru de Hong Kong',
        ],
        'HNL' => [
            'HNL',
            'lempira hondurenu',
        ],
        'HRD' => [
            'HRD',
            'dinar croatu',
        ],
        'HRK' => [
            'HRK',
            'kuna croata',
        ],
        'HTG' => [
            'HTG',
            'gourde haitianu',
        ],
        'HUF' => [
            'HUF',
            'fiorinu ungheresu',
        ],
        'IDR' => [
            'IDR',
            'rupia indonesiana',
        ],
        'IEP' => [
            'IEP',
            'isterlina irlandesa',
        ],
        'ILP' => [
            'ILP',
            'isterlina israeliana',
        ],
        'ILR' => [
            'ILR',
            'siclu israelianu (1980–1985)',
        ],
        'ILS' => [
            '₪',
            'siclu nou israelianu',
        ],
        'INR' => [
            '₹',
            'rupia indiana',
        ],
        'IQD' => [
            'IQD',
            'dinar irachenu',
        ],
        'IRR' => [
            'IRR',
            'rial iranianu',
        ],
        'ISJ' => [
            'ISJ',
            'corona islandesa (1918–1981)',
        ],
        'ISK' => [
            'ISK',
            'corona islandesa',
        ],
        'ITL' => [
            'ITL',
            'lira italiana',
        ],
        'JMD' => [
            'JMD',
            'dòllaru giamaicanu',
        ],
        'JOD' => [
            'JOD',
            'dinar giordanu',
        ],
        'JPY' => [
            'JP¥',
            'yen giaponesu',
        ],
        'KES' => [
            'KES',
            'iscellinu kenianu',
        ],
        'KGS' => [
            'KGS',
            'som kirghisu',
        ],
        'KHR' => [
            'KHR',
            'riel cambogianu',
        ],
        'KMF' => [
            'KMF',
            'francu comorianu',
        ],
        'KPW' => [
            'KPW',
            'won nordcoreanu',
        ],
        'KRH' => [
            'KRH',
            'hwan sudcoreanu (1953–1962)',
        ],
        'KRO' => [
            'KRO',
            'won sudcoreanu (1945–1953)',
        ],
        'KRW' => [
            '₩',
            'won sudcoreanu',
        ],
        'KWD' => [
            'KWD',
            'dinar kuwaitianu',
        ],
        'KYD' => [
            'KYD',
            'dòllaru de sas Ìsulas Cayman',
        ],
        'KZT' => [
            'KZT',
            'tenge kazaku',
        ],
        'LAK' => [
            'LAK',
            'kip laotianu',
        ],
        'LBP' => [
            'LBP',
            'isterlina lebanesa',
        ],
        'LKR' => [
            'LKR',
            'rupia de su Sri Lanka',
        ],
        'LRD' => [
            'LRD',
            'dòllaru liberianu',
        ],
        'LSL' => [
            'LSL',
            'loti lesothianu',
        ],
        'LTL' => [
            'LTL',
            'litas lituanu',
        ],
        'LTT' => [
            'LTT',
            'talonas lituanu',
        ],
        'LUC' => [
            'LUC',
            'francu cunvertìbile lussemburghesu',
        ],
        'LUF' => [
            'LUF',
            'francu lussemburghesu',
        ],
        'LUL' => [
            'LUL',
            'francu finantziàriu lussemburghesu',
        ],
        'LVL' => [
            'LVL',
            'lats lètone',
        ],
        'LVR' => [
            'LVR',
            'rublu lètone',
        ],
        'LYD' => [
            'LYD',
            'dinar lìbicu',
        ],
        'MAD' => [
            'MAD',
            'dirham marochinu',
        ],
        'MAF' => [
            'MAF',
            'francu marochinu',
        ],
        'MCF' => [
            'MCF',
            'francu monegascu',
        ],
        'MDC' => [
            'MDC',
            'cupon moldavu',
        ],
        'MDL' => [
            'MDL',
            'leu moldavu',
        ],
        'MGA' => [
            'MGA',
            'ariary malgàsciu',
        ],
        'MGF' => [
            'MGF',
            'francu malgàsciu',
        ],
        'MKD' => [
            'MKD',
            'denar matzèdone',
        ],
        'MKN' => [
            'MKN',
            'denar matzèdone (1992–1993)',
        ],
        'MLF' => [
            'MLF',
            'francu malianu',
        ],
        'MMK' => [
            'MMK',
            'kyat de su Myanmar',
        ],
        'MNT' => [
            'MNT',
            'tugrik mòngolu',
        ],
        'MOP' => [
            'MOP',
            'pataca macanesa',
        ],
        'MRO' => [
            'MRO',
            'ouguiya mauritiana (1973–2017)',
        ],
        'MRU' => [
            'MRU',
            'ouguiya mauritiana',
        ],
        'MTL' => [
            'MTL',
            'lira maltesa',
        ],
        'MTP' => [
            'MTP',
            'isterlina maltesa',
        ],
        'MUR' => [
            'MUR',
            'rupia mauritziana',
        ],
        'MVP' => [
            'MVP',
            'rupia maldiviana (1947–1981)',
        ],
        'MVR' => [
            'MVR',
            'rufiyaa maldiviana',
        ],
        'MWK' => [
            'MWK',
            'kwacha malawiana',
        ],
        'MXN' => [
            'MX$',
            'peso messicanu',
        ],
        'MXP' => [
            'MXP',
            'peso de prata messicanu (1861–1992)',
        ],
        'MXV' => [
            'MXV',
            'unidade de investimentu messicana',
        ],
        'MYR' => [
            'MYR',
            'ringgit malesu',
        ],
        'MZE' => [
            'MZE',
            'iscudu mozambicanu',
        ],
        'MZM' => [
            'MZM',
            'metical mozambicanu (1980–2006)',
        ],
        'MZN' => [
            'MZN',
            'metical mozambicanu',
        ],
        'NAD' => [
            'NAD',
            'dòllaru namibianu',
        ],
        'NGN' => [
            'NGN',
            'naira nigeriana',
        ],
        'NIC' => [
            'NIC',
            'córdoba nicaraguesu (1988–1991)',
        ],
        'NIO' => [
            'NIO',
            'córdoba nicaraguesu',
        ],
        'NLG' => [
            'NLG',
            'fiorinu olandesu',
        ],
        'NOK' => [
            'NOK',
            'corona norvegesa',
        ],
        'NPR' => [
            'NPR',
            'rupia nepalesa',
        ],
        'NZD' => [
            'NZ$',
            'dòllaru neozelandesu',
        ],
        'OMR' => [
            'OMR',
            'rial omanesu',
        ],
        'PAB' => [
            'PAB',
            'balboa panamesu',
        ],
        'PEI' => [
            'PEI',
            'inti peruvianu',
        ],
        'PEN' => [
            'PEN',
            'sol peruvianu',
        ],
        'PES' => [
            'PES',
            'sol peruvianu (1863–1965)',
        ],
        'PGK' => [
            'PGK',
            'kina papuana',
        ],
        'PHP' => [
            '₱',
            'peso filipinu',
        ],
        'PKR' => [
            'PKR',
            'rupia pakistana',
        ],
        'PLN' => [
            'PLN',
            'zloty polacu',
        ],
        'PLZ' => [
            'PLZ',
            'złoty polacu (1950–1995)',
        ],
        'PTE' => [
            'PTE',
            'iscudu portoghesu',
        ],
        'PYG' => [
            'PYG',
            'guaraní paraguayanu',
        ],
        'QAR' => [
            'QAR',
            'rial catarianu',
        ],
        'RHD' => [
            'RHD',
            'dòllaru rhodesianu',
        ],
        'ROL' => [
            'ROL',
            'leu rumenu (1952–2006)',
        ],
        'RON' => [
            'RON',
            'leu rumenu',
        ],
        'RSD' => [
            'RSD',
            'dinar serbu',
        ],
        'RUB' => [
            'RUB',
            'rublu russu',
        ],
        'RUR' => [
            'RUR',
            'rublu russu (1991–1998)',
        ],
        'RWF' => [
            'RWF',
            'francu ruandesu',
        ],
        'SAR' => [
            'SAR',
            'riyal saudita',
        ],
        'SBD' => [
            'SBD',
            'dòllaru de sas Ìsulas Salomone',
        ],
        'SCR' => [
            'SCR',
            'rupia seychellesa',
        ],
        'SDD' => [
            'SDD',
            'dinar sudanesu (1992–2007)',
        ],
        'SDG' => [
            'SDG',
            'isterlina sudanesa',
        ],
        'SDP' => [
            'SDP',
            'isterlina sudanesa (1957–1998)',
        ],
        'SEK' => [
            'SEK',
            'corona isvedesa',
        ],
        'SGD' => [
            'SGD',
            'dòllaru de Singapore',
        ],
        'SHP' => [
            'SHP',
            'isterlina de Sant’Elene',
        ],
        'SIT' => [
            'SIT',
            'tolar islovenu',
        ],
        'SKK' => [
            'SKK',
            'corona islovaca',
        ],
        'SLE' => [
            'SLE',
            'leone nou de sa Sierra Leone',
        ],
        'SLL' => [
            'SLL',
            'leone de sa Sierra Leone',
        ],
        'SOS' => [
            'SOS',
            'iscellinu sòmalu',
        ],
        'SRD' => [
            'SRD',
            'dòllaru surinamesu',
        ],
        'SRG' => [
            'SRG',
            'fiorinu surinamesu',
        ],
        'SSP' => [
            'SSP',
            'isterlina sud-sudanesa',
        ],
        'STD' => [
            'STD',
            'dobra de São Tomé e Príncipe (1977–2017)',
        ],
        'STN' => [
            'STN',
            'dobra de São Tomé e Príncipe',
        ],
        'SUR' => [
            'SUR',
            'rublu sovièticu',
        ],
        'SVC' => [
            'SVC',
            'colón salvadorenu',
        ],
        'SYP' => [
            'SYP',
            'isterlina siriana',
        ],
        'SZL' => [
            'SZL',
            'lilangeni de s’Eswatini',
        ],
        'THB' => [
            'THB',
            'baht tailandesu',
        ],
        'TJR' => [
            'TJR',
            'rublu tagiku',
        ],
        'TJS' => [
            'TJS',
            'somoni tagiku',
        ],
        'TMM' => [
            'TMM',
            'manat turkmenu (1993–2009)',
        ],
        'TMT' => [
            'TMT',
            'manat turkmenu',
        ],
        'TND' => [
            'TND',
            'dinar tunisinu',
        ],
        'TOP' => [
            'TOP',
            'paʻanga tongana',
        ],
        'TPE' => [
            'TPE',
            'iscudu timoresu',
        ],
        'TRL' => [
            'TRL',
            'lira turca (1922–2005)',
        ],
        'TRY' => [
            'TRY',
            'lira turca',
        ],
        'TTD' => [
            'TTD',
            'dòllaru de Trinidad e Tobago',
        ],
        'TWD' => [
            'NT$',
            'dòllaru nou taiwanesu',
        ],
        'TZS' => [
            'TZS',
            'iscellinu tanzanianu',
        ],
        'UAH' => [
            'UAH',
            'hryvnia ucraina',
        ],
        'UAK' => [
            'UAK',
            'karbovanets ucrainu',
        ],
        'UGS' => [
            'UGS',
            'iscellinu ugandesu (1966–1987)',
        ],
        'UGX' => [
            'UGX',
            'iscellinu ugandesu',
        ],
        'USD' => [
            'US$',
            'dòllaru americanu',
        ],
        'USN' => [
            'USN',
            'dòllaru americanu (die imbeniente)',
        ],
        'USS' => [
            'USS',
            'dòllaru americanu (die matessi)',
        ],
        'UYI' => [
            'UYI',
            'peso uruguayanu (unidades inditzizadas)',
        ],
        'UYP' => [
            'UYP',
            'peso uruguayanu (1975–1993)',
        ],
        'UYU' => [
            'UYU',
            'peso uruguayanu',
        ],
        'UYW' => [
            'UYW',
            'unidade ìnditze de sos salàrios nominales uruguayanos',
        ],
        'UZS' => [
            'UZS',
            'som uzbeku',
        ],
        'VEB' => [
            'VEB',
            'bolivar venezuelanu (1871–2008)',
        ],
        'VED' => [
            'VED',
            'bolivar soberanu',
        ],
        'VEF' => [
            'VEF',
            'bolivar venezuelanu (2008–2018)',
        ],
        'VES' => [
            'VES',
            'bolivar venezuelanu',
        ],
        'VND' => [
            '₫',
            'dong vietnamesu',
        ],
        'VNN' => [
            'VNN',
            'dong vietnamesu (1978–1985)',
        ],
        'VUV' => [
            'VUV',
            'vatu de Vanuatu',
        ],
        'WST' => [
            'WST',
            'tala samoana',
        ],
        'XAF' => [
            'FCFA',
            'francu CFA BEAC',
        ],
        'XCD' => [
            'EC$',
            'dòllaru de sos Caràibes orientales',
        ],
        'XEU' => [
            'XEU',
            'unidade de contu europea',
        ],
        'XFO' => [
            'XFO',
            'francu oro frantzesu',
        ],
        'XFU' => [
            'XFU',
            'francu UIC frantzesu',
        ],
        'XOF' => [
            'F CFA',
            'francu CFA BCEAO',
        ],
        'XPF' => [
            'CFPF',
            'francu CFP',
        ],
        'XRE' => [
            'XRE',
            'fundos RINET',
        ],
        'YDD' => [
            'YDD',
            'dinar yemenita',
        ],
        'YER' => [
            'YER',
            'rial yemenita',
        ],
        'YUD' => [
            'YUD',
            'dinar forte yugoslavu (1966–1990)',
        ],
        'YUM' => [
            'YUM',
            'dinar nou yugoslavu (1994–2002)',
        ],
        'YUN' => [
            'YUN',
            'dinar cunvertìbile yugoslavu (1990–1992)',
        ],
        'YUR' => [
            'YUR',
            'dinar riformadu yugoslavu (1992–1993)',
        ],
        'ZAL' => [
            'ZAL',
            'rand sudafricanu (finantziàriu)',
        ],
        'ZAR' => [
            'ZAR',
            'rand sudafricanu',
        ],
        'ZMK' => [
            'ZMK',
            'kwacha zambiana (1968–2012)',
        ],
        'ZMW' => [
            'ZMW',
            'kwacha zambiana',
        ],
        'ZRN' => [
            'ZRN',
            'zaire nou zaireanu (1993–1998)',
        ],
        'ZRZ' => [
            'ZRZ',
            'zaire zaireanu (1971–1993)',
        ],
        'ZWD' => [
            'ZWD',
            'dòllaru zimbabweanu (1980–2008)',
        ],
        'ZWL' => [
            'ZWL',
            'dòllaru zimbabweanu (2009)',
        ],
        'ZWR' => [
            'ZWR',
            'dòllaru zimbabweanu (2008)',
        ],
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";