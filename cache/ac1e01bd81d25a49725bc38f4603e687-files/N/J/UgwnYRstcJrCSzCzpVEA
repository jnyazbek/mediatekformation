1707462042
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3A45e6b9a7edaa0010a49ba17fdbf4721e-172c3431660d89c573f8dbb6c88e51fb
s:36424:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"172c3431660d89c573f8dbb6c88e51fb";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"de.php";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/de.php";s:41:" phpDocumentor\Reflection\Php\File source";s:26392:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'Mittlere Greenwich-Zeit (Abidjan)',
        'Africa/Accra' => 'Mittlere Greenwich-Zeit (Accra)',
        'Africa/Addis_Ababa' => 'Ostafrikanische Zeit (Addis Abeba)',
        'Africa/Algiers' => 'Mitteleuropäische Zeit (Algier)',
        'Africa/Asmera' => 'Ostafrikanische Zeit (Asmara)',
        'Africa/Bamako' => 'Mittlere Greenwich-Zeit (Bamako)',
        'Africa/Bangui' => 'Westafrikanische Zeit (Bangui)',
        'Africa/Banjul' => 'Mittlere Greenwich-Zeit (Banjul)',
        'Africa/Bissau' => 'Mittlere Greenwich-Zeit (Bissau)',
        'Africa/Blantyre' => 'Zentralafrikanische Zeit (Blantyre)',
        'Africa/Brazzaville' => 'Westafrikanische Zeit (Brazzaville)',
        'Africa/Bujumbura' => 'Zentralafrikanische Zeit (Bujumbura)',
        'Africa/Cairo' => 'Osteuropäische Zeit (Kairo)',
        'Africa/Casablanca' => 'Westeuropäische Zeit (Casablanca)',
        'Africa/Ceuta' => 'Mitteleuropäische Zeit (Ceuta)',
        'Africa/Conakry' => 'Mittlere Greenwich-Zeit (Conakry)',
        'Africa/Dakar' => 'Mittlere Greenwich-Zeit (Dakar)',
        'Africa/Dar_es_Salaam' => 'Ostafrikanische Zeit (Daressalam)',
        'Africa/Djibouti' => 'Ostafrikanische Zeit (Dschibuti)',
        'Africa/Douala' => 'Westafrikanische Zeit (Douala)',
        'Africa/El_Aaiun' => 'Westeuropäische Zeit (El Aaiún)',
        'Africa/Freetown' => 'Mittlere Greenwich-Zeit (Freetown)',
        'Africa/Gaborone' => 'Zentralafrikanische Zeit (Gaborone)',
        'Africa/Harare' => 'Zentralafrikanische Zeit (Harare)',
        'Africa/Johannesburg' => 'Südafrikanische Zeit (Johannesburg)',
        'Africa/Juba' => 'Zentralafrikanische Zeit (Juba)',
        'Africa/Kampala' => 'Ostafrikanische Zeit (Kampala)',
        'Africa/Khartoum' => 'Zentralafrikanische Zeit (Khartum)',
        'Africa/Kigali' => 'Zentralafrikanische Zeit (Kigali)',
        'Africa/Kinshasa' => 'Westafrikanische Zeit (Kinshasa)',
        'Africa/Lagos' => 'Westafrikanische Zeit (Lagos)',
        'Africa/Libreville' => 'Westafrikanische Zeit (Libreville)',
        'Africa/Lome' => 'Mittlere Greenwich-Zeit (Lomé)',
        'Africa/Luanda' => 'Westafrikanische Zeit (Luanda)',
        'Africa/Lubumbashi' => 'Zentralafrikanische Zeit (Lubumbashi)',
        'Africa/Lusaka' => 'Zentralafrikanische Zeit (Lusaka)',
        'Africa/Malabo' => 'Westafrikanische Zeit (Malabo)',
        'Africa/Maputo' => 'Zentralafrikanische Zeit (Maputo)',
        'Africa/Maseru' => 'Südafrikanische Zeit (Maseru)',
        'Africa/Mbabane' => 'Südafrikanische Zeit (Mbabane)',
        'Africa/Mogadishu' => 'Ostafrikanische Zeit (Mogadischu)',
        'Africa/Monrovia' => 'Mittlere Greenwich-Zeit (Monrovia)',
        'Africa/Nairobi' => 'Ostafrikanische Zeit (Nairobi)',
        'Africa/Ndjamena' => 'Westafrikanische Zeit (N’Djamena)',
        'Africa/Niamey' => 'Westafrikanische Zeit (Niamey)',
        'Africa/Nouakchott' => 'Mittlere Greenwich-Zeit (Nouakchott)',
        'Africa/Ouagadougou' => 'Mittlere Greenwich-Zeit (Ouagadougou)',
        'Africa/Porto-Novo' => 'Westafrikanische Zeit (Porto Novo)',
        'Africa/Sao_Tome' => 'Mittlere Greenwich-Zeit (São Tomé)',
        'Africa/Tripoli' => 'Osteuropäische Zeit (Tripolis)',
        'Africa/Tunis' => 'Mitteleuropäische Zeit (Tunis)',
        'Africa/Windhoek' => 'Zentralafrikanische Zeit (Windhoek)',
        'America/Adak' => 'Hawaii-Aleuten-Zeit (Adak)',
        'America/Anchorage' => 'Alaska-Zeit (Anchorage)',
        'America/Anguilla' => 'Atlantik-Zeit (Anguilla)',
        'America/Antigua' => 'Atlantik-Zeit (Antigua)',
        'America/Araguaina' => 'Brasília-Zeit (Araguaina)',
        'America/Argentina/La_Rioja' => 'Argentinische Zeit (La Rioja)',
        'America/Argentina/Rio_Gallegos' => 'Argentinische Zeit (Rio Gallegos)',
        'America/Argentina/Salta' => 'Argentinische Zeit (Salta)',
        'America/Argentina/San_Juan' => 'Argentinische Zeit (San Juan)',
        'America/Argentina/San_Luis' => 'Argentinische Zeit (San Luis)',
        'America/Argentina/Tucuman' => 'Argentinische Zeit (Tucuman)',
        'America/Argentina/Ushuaia' => 'Argentinische Zeit (Ushuaia)',
        'America/Aruba' => 'Atlantik-Zeit (Aruba)',
        'America/Asuncion' => 'Paraguayische Zeit (Asunción)',
        'America/Bahia' => 'Brasília-Zeit (Bahia)',
        'America/Bahia_Banderas' => 'Nordamerikanische Zentralzeit (Bahia Banderas)',
        'America/Barbados' => 'Atlantik-Zeit (Barbados)',
        'America/Belem' => 'Brasília-Zeit (Belem)',
        'America/Belize' => 'Nordamerikanische Zentralzeit (Belize)',
        'America/Blanc-Sablon' => 'Atlantik-Zeit (Blanc-Sablon)',
        'America/Boa_Vista' => 'Amazonas-Zeit (Boa Vista)',
        'America/Bogota' => 'Kolumbianische Zeit (Bogotá)',
        'America/Boise' => 'Rocky-Mountain-Zeit (Boise)',
        'America/Buenos_Aires' => 'Argentinische Zeit (Buenos Aires)',
        'America/Cambridge_Bay' => 'Rocky-Mountain-Zeit (Cambridge Bay)',
        'America/Campo_Grande' => 'Amazonas-Zeit (Campo Grande)',
        'America/Cancun' => 'Nordamerikanische Ostküstenzeit (Cancún)',
        'America/Caracas' => 'Venezuela-Zeit (Caracas)',
        'America/Catamarca' => 'Argentinische Zeit (Catamarca)',
        'America/Cayenne' => 'Französisch-Guayana-Zeit (Cayenne)',
        'America/Cayman' => 'Nordamerikanische Ostküstenzeit (Kaimaninseln)',
        'America/Chicago' => 'Nordamerikanische Zentralzeit (Chicago)',
        'America/Chihuahua' => 'Nordamerikanische Zentralzeit (Chihuahua)',
        'America/Ciudad_Juarez' => 'Rocky-Mountain-Zeit (Ciudad Juárez)',
        'America/Coral_Harbour' => 'Nordamerikanische Ostküstenzeit (Atikokan)',
        'America/Cordoba' => 'Argentinische Zeit (Córdoba)',
        'America/Costa_Rica' => 'Nordamerikanische Zentralzeit (Costa Rica)',
        'America/Creston' => 'Rocky-Mountain-Zeit (Creston)',
        'America/Cuiaba' => 'Amazonas-Zeit (Cuiaba)',
        'America/Curacao' => 'Atlantik-Zeit (Curaçao)',
        'America/Danmarkshavn' => 'Mittlere Greenwich-Zeit (Danmarkshavn)',
        'America/Dawson' => 'Yukon-Zeit (Dawson)',
        'America/Dawson_Creek' => 'Rocky-Mountain-Zeit (Dawson Creek)',
        'America/Denver' => 'Rocky-Mountain-Zeit (Denver)',
        'America/Detroit' => 'Nordamerikanische Ostküstenzeit (Detroit)',
        'America/Dominica' => 'Atlantik-Zeit (Dominica)',
        'America/Edmonton' => 'Rocky-Mountain-Zeit (Edmonton)',
        'America/Eirunepe' => 'Acre-Zeit (Eirunepe)',
        'America/El_Salvador' => 'Nordamerikanische Zentralzeit (El Salvador)',
        'America/Fort_Nelson' => 'Rocky-Mountain-Zeit (Fort Nelson)',
        'America/Fortaleza' => 'Brasília-Zeit (Fortaleza)',
        'America/Glace_Bay' => 'Atlantik-Zeit (Glace Bay)',
        'America/Godthab' => 'Westgrönland-Zeit (Nuuk)',
        'America/Goose_Bay' => 'Atlantik-Zeit (Goose Bay)',
        'America/Grand_Turk' => 'Nordamerikanische Ostküstenzeit (Grand Turk)',
        'America/Grenada' => 'Atlantik-Zeit (Grenada)',
        'America/Guadeloupe' => 'Atlantik-Zeit (Guadeloupe)',
        'America/Guatemala' => 'Nordamerikanische Zentralzeit (Guatemala)',
        'America/Guayaquil' => 'Ecuadorianische Zeit (Guayaquil)',
        'America/Guyana' => 'Guyana-Zeit',
        'America/Halifax' => 'Atlantik-Zeit (Halifax)',
        'America/Havana' => 'Kubanische Zeit (Havanna)',
        'America/Hermosillo' => 'Mexikanische Pazifikzeit (Hermosillo)',
        'America/Indiana/Knox' => 'Nordamerikanische Zentralzeit (Knox, Indiana)',
        'America/Indiana/Marengo' => 'Nordamerikanische Ostküstenzeit (Marengo, Indiana)',
        'America/Indiana/Petersburg' => 'Nordamerikanische Ostküstenzeit (Petersburg, Indiana)',
        'America/Indiana/Tell_City' => 'Nordamerikanische Zentralzeit (Tell City, Indiana)',
        'America/Indiana/Vevay' => 'Nordamerikanische Ostküstenzeit (Vevay, Indiana)',
        'America/Indiana/Vincennes' => 'Nordamerikanische Ostküstenzeit (Vincennes, Indiana)',
        'America/Indiana/Winamac' => 'Nordamerikanische Ostküstenzeit (Winamac, Indiana)',
        'America/Indianapolis' => 'Nordamerikanische Ostküstenzeit (Indianapolis)',
        'America/Inuvik' => 'Rocky-Mountain-Zeit (Inuvik)',
        'America/Iqaluit' => 'Nordamerikanische Ostküstenzeit (Iqaluit)',
        'America/Jamaica' => 'Nordamerikanische Ostküstenzeit (Jamaika)',
        'America/Jujuy' => 'Argentinische Zeit (Jujuy)',
        'America/Juneau' => 'Alaska-Zeit (Juneau)',
        'America/Kentucky/Monticello' => 'Nordamerikanische Ostküstenzeit (Monticello, Kentucky)',
        'America/Kralendijk' => 'Atlantik-Zeit (Kralendijk)',
        'America/La_Paz' => 'Bolivianische Zeit (La Paz)',
        'America/Lima' => 'Peruanische Zeit (Lima)',
        'America/Los_Angeles' => 'Nordamerikanische Westküstenzeit (Los Angeles)',
        'America/Louisville' => 'Nordamerikanische Ostküstenzeit (Louisville)',
        'America/Lower_Princes' => 'Atlantik-Zeit (Lower Prince’s Quarter)',
        'America/Maceio' => 'Brasília-Zeit (Maceio)',
        'America/Managua' => 'Nordamerikanische Zentralzeit (Managua)',
        'America/Manaus' => 'Amazonas-Zeit (Manaus)',
        'America/Marigot' => 'Atlantik-Zeit (Marigot)',
        'America/Martinique' => 'Atlantik-Zeit (Martinique)',
        'America/Matamoros' => 'Nordamerikanische Zentralzeit (Matamoros)',
        'America/Mazatlan' => 'Mexikanische Pazifikzeit (Mazatlan)',
        'America/Mendoza' => 'Argentinische Zeit (Mendoza)',
        'America/Menominee' => 'Nordamerikanische Zentralzeit (Menominee)',
        'America/Merida' => 'Nordamerikanische Zentralzeit (Merida)',
        'America/Metlakatla' => 'Alaska-Zeit (Metlakatla)',
        'America/Mexico_City' => 'Nordamerikanische Zentralzeit (Mexiko-Stadt)',
        'America/Miquelon' => 'St.-Pierre-und-Miquelon-Zeit',
        'America/Moncton' => 'Atlantik-Zeit (Moncton)',
        'America/Monterrey' => 'Nordamerikanische Zentralzeit (Monterrey)',
        'America/Montevideo' => 'Uruguayische Zeit (Montevideo)',
        'America/Montserrat' => 'Atlantik-Zeit (Montserrat)',
        'America/Nassau' => 'Nordamerikanische Ostküstenzeit (Nassau)',
        'America/New_York' => 'Nordamerikanische Ostküstenzeit (New York)',
        'America/Nome' => 'Alaska-Zeit (Nome)',
        'America/Noronha' => 'Fernando-de-Noronha-Zeit',
        'America/North_Dakota/Beulah' => 'Nordamerikanische Zentralzeit (Beulah, North Dakota)',
        'America/North_Dakota/Center' => 'Nordamerikanische Zentralzeit (Center, North Dakota)',
        'America/North_Dakota/New_Salem' => 'Nordamerikanische Zentralzeit (New Salem, North Dakota)',
        'America/Ojinaga' => 'Nordamerikanische Zentralzeit (Ojinaga)',
        'America/Panama' => 'Nordamerikanische Ostküstenzeit (Panama)',
        'America/Paramaribo' => 'Suriname-Zeit (Paramaribo)',
        'America/Phoenix' => 'Rocky-Mountain-Zeit (Phoenix)',
        'America/Port-au-Prince' => 'Nordamerikanische Ostküstenzeit (Port-au-Prince)',
        'America/Port_of_Spain' => 'Atlantik-Zeit (Port of Spain)',
        'America/Porto_Velho' => 'Amazonas-Zeit (Porto Velho)',
        'America/Puerto_Rico' => 'Atlantik-Zeit (Puerto Rico)',
        'America/Punta_Arenas' => 'Chilenische Zeit (Punta Arenas)',
        'America/Rankin_Inlet' => 'Nordamerikanische Zentralzeit (Rankin Inlet)',
        'America/Recife' => 'Brasília-Zeit (Recife)',
        'America/Regina' => 'Nordamerikanische Zentralzeit (Regina)',
        'America/Resolute' => 'Nordamerikanische Zentralzeit (Resolute)',
        'America/Rio_Branco' => 'Acre-Zeit (Rio Branco)',
        'America/Santarem' => 'Brasília-Zeit (Santarem)',
        'America/Santiago' => 'Chilenische Zeit (Santiago)',
        'America/Santo_Domingo' => 'Atlantik-Zeit (Santo Domingo)',
        'America/Sao_Paulo' => 'Brasília-Zeit (São Paulo)',
        'America/Scoresbysund' => 'Ostgrönland-Zeit (Ittoqqortoormiit)',
        'America/Sitka' => 'Alaska-Zeit (Sitka)',
        'America/St_Barthelemy' => 'Atlantik-Zeit (Saint-Barthélemy)',
        'America/St_Johns' => 'Neufundland-Zeit (St. John’s)',
        'America/St_Kitts' => 'Atlantik-Zeit (St. Kitts)',
        'America/St_Lucia' => 'Atlantik-Zeit (St. Lucia)',
        'America/St_Thomas' => 'Atlantik-Zeit (St. Thomas)',
        'America/St_Vincent' => 'Atlantik-Zeit (St. Vincent)',
        'America/Swift_Current' => 'Nordamerikanische Zentralzeit (Swift Current)',
        'America/Tegucigalpa' => 'Nordamerikanische Zentralzeit (Tegucigalpa)',
        'America/Thule' => 'Atlantik-Zeit (Thule)',
        'America/Tijuana' => 'Nordamerikanische Westküstenzeit (Tijuana)',
        'America/Toronto' => 'Nordamerikanische Ostküstenzeit (Toronto)',
        'America/Tortola' => 'Atlantik-Zeit (Tortola)',
        'America/Vancouver' => 'Nordamerikanische Westküstenzeit (Vancouver)',
        'America/Whitehorse' => 'Yukon-Zeit (Whitehorse)',
        'America/Winnipeg' => 'Nordamerikanische Zentralzeit (Winnipeg)',
        'America/Yakutat' => 'Alaska-Zeit (Yakutat)',
        'Antarctica/Casey' => 'Casey-Zeit',
        'Antarctica/Davis' => 'Davis-Zeit',
        'Antarctica/DumontDUrville' => 'Dumont-d’Urville-Zeit',
        'Antarctica/Macquarie' => 'Ostaustralische Zeit (Macquarie)',
        'Antarctica/Mawson' => 'Mawson-Zeit',
        'Antarctica/McMurdo' => 'Neuseeland-Zeit (McMurdo)',
        'Antarctica/Palmer' => 'Chilenische Zeit (Palmer)',
        'Antarctica/Rothera' => 'Rothera-Zeit',
        'Antarctica/Syowa' => 'Syowa-Zeit',
        'Antarctica/Troll' => 'Mittlere Greenwich-Zeit (Troll)',
        'Antarctica/Vostok' => 'Wostok-Zeit',
        'Arctic/Longyearbyen' => 'Mitteleuropäische Zeit (Longyearbyen)',
        'Asia/Aden' => 'Arabische Zeit (Aden)',
        'Asia/Almaty' => 'Ostkasachische Zeit (Almaty)',
        'Asia/Amman' => 'Osteuropäische Zeit (Amman)',
        'Asia/Anadyr' => 'Anadyr Zeit',
        'Asia/Aqtau' => 'Westkasachische Zeit (Aqtau)',
        'Asia/Aqtobe' => 'Westkasachische Zeit (Aktobe)',
        'Asia/Ashgabat' => 'Turkmenistan-Zeit (Aşgabat)',
        'Asia/Atyrau' => 'Westkasachische Zeit (Atyrau)',
        'Asia/Baghdad' => 'Arabische Zeit (Bagdad)',
        'Asia/Bahrain' => 'Arabische Zeit (Bahrain)',
        'Asia/Baku' => 'Aserbaidschanische Zeit (Baku)',
        'Asia/Bangkok' => 'Indochina-Zeit (Bangkok)',
        'Asia/Barnaul' => 'Russland (Ortszeit) (Barnaul)',
        'Asia/Beirut' => 'Osteuropäische Zeit (Beirut)',
        'Asia/Bishkek' => 'Kirgisistan-Zeit (Bischkek)',
        'Asia/Brunei' => 'Brunei-Darussalam-Zeit',
        'Asia/Calcutta' => 'Indische Normalzeit (Kalkutta)',
        'Asia/Chita' => 'Jakutsker Zeit (Tschita)',
        'Asia/Choibalsan' => 'Ulaanbaatar-Zeit (Tschoibalsan)',
        'Asia/Colombo' => 'Indische Normalzeit (Colombo)',
        'Asia/Damascus' => 'Osteuropäische Zeit (Damaskus)',
        'Asia/Dhaka' => 'Bangladesch-Zeit (Dhaka)',
        'Asia/Dili' => 'Osttimor-Zeit (Dili)',
        'Asia/Dubai' => 'Golf-Zeit (Dubai)',
        'Asia/Dushanbe' => 'Tadschikistan-Zeit (Duschanbe)',
        'Asia/Famagusta' => 'Osteuropäische Zeit (Famagusta)',
        'Asia/Gaza' => 'Osteuropäische Zeit (Gaza)',
        'Asia/Hebron' => 'Osteuropäische Zeit (Hebron)',
        'Asia/Hong_Kong' => 'Hongkong-Zeit',
        'Asia/Hovd' => 'Chowd-Zeit',
        'Asia/Irkutsk' => 'Irkutsker Zeit',
        'Asia/Jakarta' => 'Westindonesische Zeit (Jakarta)',
        'Asia/Jayapura' => 'Ostindonesische Zeit (Jayapura)',
        'Asia/Jerusalem' => 'Israelische Zeit (Jerusalem)',
        'Asia/Kabul' => 'Afghanistan-Zeit (Kabul)',
        'Asia/Kamchatka' => 'Kamtschatka-Zeit',
        'Asia/Karachi' => 'Pakistanische Zeit (Karatschi)',
        'Asia/Katmandu' => 'Nepalesische Zeit (Kathmandu)',
        'Asia/Khandyga' => 'Jakutsker Zeit (Chandyga)',
        'Asia/Krasnoyarsk' => 'Krasnojarsker Zeit',
        'Asia/Kuala_Lumpur' => 'Malaysische Zeit (Kuala Lumpur)',
        'Asia/Kuching' => 'Malaysische Zeit (Kuching)',
        'Asia/Kuwait' => 'Arabische Zeit (Kuwait)',
        'Asia/Macau' => 'Chinesische Zeit (Macau)',
        'Asia/Magadan' => 'Magadan-Zeit',
        'Asia/Makassar' => 'Zentralindonesische Zeit (Makassar)',
        'Asia/Manila' => 'Philippinische Zeit (Manila)',
        'Asia/Muscat' => 'Golf-Zeit (Maskat)',
        'Asia/Nicosia' => 'Osteuropäische Zeit (Nikosia)',
        'Asia/Novokuznetsk' => 'Krasnojarsker Zeit (Nowokuznetsk)',
        'Asia/Novosibirsk' => 'Nowosibirsker Zeit',
        'Asia/Omsk' => 'Omsker Zeit',
        'Asia/Oral' => 'Westkasachische Zeit (Oral)',
        'Asia/Phnom_Penh' => 'Indochina-Zeit (Phnom Penh)',
        'Asia/Pontianak' => 'Westindonesische Zeit (Pontianak)',
        'Asia/Pyongyang' => 'Koreanische Zeit (Pjöngjang)',
        'Asia/Qatar' => 'Arabische Zeit (Katar)',
        'Asia/Qostanay' => 'Ostkasachische Zeit (Qostanai)',
        'Asia/Qyzylorda' => 'Westkasachische Zeit (Qysylorda)',
        'Asia/Rangoon' => 'Myanmar-Zeit (Rangun)',
        'Asia/Riyadh' => 'Arabische Zeit (Riad)',
        'Asia/Saigon' => 'Indochina-Zeit (Ho-Chi-Minh-Stadt)',
        'Asia/Sakhalin' => 'Sachalin-Zeit',
        'Asia/Samarkand' => 'Usbekistan-Zeit (Samarkand)',
        'Asia/Seoul' => 'Koreanische Zeit (Seoul)',
        'Asia/Shanghai' => 'Chinesische Zeit (Shanghai)',
        'Asia/Singapore' => 'Singapurische Normalzeit',
        'Asia/Srednekolymsk' => 'Magadan-Zeit (Srednekolymsk)',
        'Asia/Taipei' => 'Taipeh-Zeit',
        'Asia/Tashkent' => 'Usbekistan-Zeit (Taschkent)',
        'Asia/Tbilisi' => 'Georgische Zeit (Tiflis)',
        'Asia/Tehran' => 'Iranische Zeit (Teheran)',
        'Asia/Thimphu' => 'Bhutan-Zeit (Thimphu)',
        'Asia/Tokyo' => 'Japanische Zeit (Tokio)',
        'Asia/Tomsk' => 'Russland (Ortszeit) (Tomsk)',
        'Asia/Ulaanbaatar' => 'Ulaanbaatar-Zeit',
        'Asia/Urumqi' => 'China (Ortszeit) (Ürümqi)',
        'Asia/Ust-Nera' => 'Wladiwostoker Zeit (Ust-Nera)',
        'Asia/Vientiane' => 'Indochina-Zeit (Vientiane)',
        'Asia/Vladivostok' => 'Wladiwostoker Zeit',
        'Asia/Yakutsk' => 'Jakutsker Zeit',
        'Asia/Yekaterinburg' => 'Jekaterinburger Zeit',
        'Asia/Yerevan' => 'Armenische Zeit (Eriwan)',
        'Atlantic/Azores' => 'Azoren-Zeit',
        'Atlantic/Bermuda' => 'Atlantik-Zeit (Bermuda)',
        'Atlantic/Canary' => 'Westeuropäische Zeit (Kanaren)',
        'Atlantic/Cape_Verde' => 'Cabo-Verde-Zeit',
        'Atlantic/Faeroe' => 'Westeuropäische Zeit (Färöer)',
        'Atlantic/Madeira' => 'Westeuropäische Zeit (Madeira)',
        'Atlantic/Reykjavik' => 'Mittlere Greenwich-Zeit (Reyk­ja­vík)',
        'Atlantic/South_Georgia' => 'Südgeorgische Zeit (Südgeorgien)',
        'Atlantic/St_Helena' => 'Mittlere Greenwich-Zeit (St. Helena)',
        'Atlantic/Stanley' => 'Falklandinseln-Zeit (Stanley)',
        'Australia/Adelaide' => 'Zentralaustralische Zeit (Adelaide)',
        'Australia/Brisbane' => 'Ostaustralische Zeit (Brisbane)',
        'Australia/Broken_Hill' => 'Zentralaustralische Zeit (Broken Hill)',
        'Australia/Darwin' => 'Zentralaustralische Zeit (Darwin)',
        'Australia/Eucla' => 'Zentral-/Westaustralische Zeit (Eucla)',
        'Australia/Hobart' => 'Ostaustralische Zeit (Hobart)',
        'Australia/Lindeman' => 'Ostaustralische Zeit (Lindeman)',
        'Australia/Lord_Howe' => 'Lord-Howe-Zeit',
        'Australia/Melbourne' => 'Ostaustralische Zeit (Melbourne)',
        'Australia/Perth' => 'Westaustralische Zeit (Perth)',
        'Australia/Sydney' => 'Ostaustralische Zeit (Sydney)',
        'CST6CDT' => 'Nordamerikanische Zentralzeit',
        'EST5EDT' => 'Nordamerikanische Ostküstenzeit',
        'Etc/GMT' => 'Mittlere Greenwich-Zeit',
        'Etc/UTC' => 'Koordinierte Weltzeit',
        'Europe/Amsterdam' => 'Mitteleuropäische Zeit (Amsterdam)',
        'Europe/Andorra' => 'Mitteleuropäische Zeit (Andorra)',
        'Europe/Astrakhan' => 'Moskauer Zeit (Astrachan)',
        'Europe/Athens' => 'Osteuropäische Zeit (Athen)',
        'Europe/Belgrade' => 'Mitteleuropäische Zeit (Belgrad)',
        'Europe/Berlin' => 'Mitteleuropäische Zeit (Berlin)',
        'Europe/Bratislava' => 'Mitteleuropäische Zeit (Bratislava)',
        'Europe/Brussels' => 'Mitteleuropäische Zeit (Brüssel)',
        'Europe/Bucharest' => 'Osteuropäische Zeit (Bukarest)',
        'Europe/Budapest' => 'Mitteleuropäische Zeit (Budapest)',
        'Europe/Busingen' => 'Mitteleuropäische Zeit (Büsingen)',
        'Europe/Chisinau' => 'Osteuropäische Zeit (Chisinau)',
        'Europe/Copenhagen' => 'Mitteleuropäische Zeit (Kopenhagen)',
        'Europe/Dublin' => 'Mittlere Greenwich-Zeit (Dublin)',
        'Europe/Gibraltar' => 'Mitteleuropäische Zeit (Gibraltar)',
        'Europe/Guernsey' => 'Mittlere Greenwich-Zeit (Guernsey)',
        'Europe/Helsinki' => 'Osteuropäische Zeit (Helsinki)',
        'Europe/Isle_of_Man' => 'Mittlere Greenwich-Zeit (Isle of Man)',
        'Europe/Istanbul' => 'Türkei (Ortszeit) (Istanbul)',
        'Europe/Jersey' => 'Mittlere Greenwich-Zeit (Jersey)',
        'Europe/Kaliningrad' => 'Osteuropäische Zeit (Kaliningrad)',
        'Europe/Kiev' => 'Osteuropäische Zeit (Kiew)',
        'Europe/Kirov' => 'Russland (Ortszeit) (Kirow)',
        'Europe/Lisbon' => 'Westeuropäische Zeit (Lissabon)',
        'Europe/Ljubljana' => 'Mitteleuropäische Zeit (Ljubljana)',
        'Europe/London' => 'Mittlere Greenwich-Zeit (London)',
        'Europe/Luxembourg' => 'Mitteleuropäische Zeit (Luxemburg)',
        'Europe/Madrid' => 'Mitteleuropäische Zeit (Madrid)',
        'Europe/Malta' => 'Mitteleuropäische Zeit (Malta)',
        'Europe/Mariehamn' => 'Osteuropäische Zeit (Mariehamn)',
        'Europe/Minsk' => 'Moskauer Zeit (Minsk)',
        'Europe/Monaco' => 'Mitteleuropäische Zeit (Monaco)',
        'Europe/Moscow' => 'Moskauer Zeit',
        'Europe/Oslo' => 'Mitteleuropäische Zeit (Oslo)',
        'Europe/Paris' => 'Mitteleuropäische Zeit (Paris)',
        'Europe/Podgorica' => 'Mitteleuropäische Zeit (Podgorica)',
        'Europe/Prague' => 'Mitteleuropäische Zeit (Prag)',
        'Europe/Riga' => 'Osteuropäische Zeit (Riga)',
        'Europe/Rome' => 'Mitteleuropäische Zeit (Rom)',
        'Europe/Samara' => 'Samara-Zeit',
        'Europe/San_Marino' => 'Mitteleuropäische Zeit (San Marino)',
        'Europe/Sarajevo' => 'Mitteleuropäische Zeit (Sarajevo)',
        'Europe/Saratov' => 'Moskauer Zeit (Saratow)',
        'Europe/Simferopol' => 'Moskauer Zeit (Simferopol)',
        'Europe/Skopje' => 'Mitteleuropäische Zeit (Skopje)',
        'Europe/Sofia' => 'Osteuropäische Zeit (Sofia)',
        'Europe/Stockholm' => 'Mitteleuropäische Zeit (Stockholm)',
        'Europe/Tallinn' => 'Osteuropäische Zeit (Tallinn)',
        'Europe/Tirane' => 'Mitteleuropäische Zeit (Tirana)',
        'Europe/Ulyanovsk' => 'Moskauer Zeit (Uljanowsk)',
        'Europe/Vaduz' => 'Mitteleuropäische Zeit (Vaduz)',
        'Europe/Vatican' => 'Mitteleuropäische Zeit (Vatikan)',
        'Europe/Vienna' => 'Mitteleuropäische Zeit (Wien)',
        'Europe/Vilnius' => 'Osteuropäische Zeit (Vilnius)',
        'Europe/Volgograd' => 'Wolgograder Zeit',
        'Europe/Warsaw' => 'Mitteleuropäische Zeit (Warschau)',
        'Europe/Zagreb' => 'Mitteleuropäische Zeit (Zagreb)',
        'Europe/Zurich' => 'Mitteleuropäische Zeit (Zürich)',
        'Indian/Antananarivo' => 'Ostafrikanische Zeit (Antananarivo)',
        'Indian/Chagos' => 'Indischer-Ozean-Zeit (Chagos)',
        'Indian/Christmas' => 'Weihnachtsinsel-Zeit',
        'Indian/Cocos' => 'Kokosinseln-Zeit (Cocos)',
        'Indian/Comoro' => 'Ostafrikanische Zeit (Komoren)',
        'Indian/Kerguelen' => 'Französische-Süd-und-Antarktisgebiete-Zeit (Kerguelen)',
        'Indian/Mahe' => 'Seychellen-Zeit (Mahe)',
        'Indian/Maldives' => 'Malediven-Zeit',
        'Indian/Mauritius' => 'Mauritius-Zeit',
        'Indian/Mayotte' => 'Ostafrikanische Zeit (Mayotte)',
        'Indian/Reunion' => 'Réunion-Zeit',
        'MST7MDT' => 'Rocky-Mountain-Zeit',
        'PST8PDT' => 'Nordamerikanische Westküstenzeit',
        'Pacific/Apia' => 'Apia-Zeit',
        'Pacific/Auckland' => 'Neuseeland-Zeit (Auckland)',
        'Pacific/Bougainville' => 'Papua-Neuguinea-Zeit (Bougainville)',
        'Pacific/Chatham' => 'Chatham-Zeit',
        'Pacific/Easter' => 'Osterinsel-Zeit',
        'Pacific/Efate' => 'Vanuatu-Zeit (Efate)',
        'Pacific/Enderbury' => 'Phoenixinseln-Zeit (Enderbury)',
        'Pacific/Fakaofo' => 'Tokelau-Zeit (Fakaofo)',
        'Pacific/Fiji' => 'Fidschi-Zeit',
        'Pacific/Funafuti' => 'Tuvalu-Zeit (Funafuti)',
        'Pacific/Galapagos' => 'Galapagos-Zeit',
        'Pacific/Gambier' => 'Gambier-Zeit',
        'Pacific/Guadalcanal' => 'Salomonen-Zeit (Guadalcanal)',
        'Pacific/Guam' => 'Chamorro-Zeit (Guam)',
        'Pacific/Honolulu' => 'Hawaii-Aleuten-Zeit (Honolulu)',
        'Pacific/Kiritimati' => 'Linieninseln-Zeit (Kiritimati)',
        'Pacific/Kosrae' => 'Kosrae-Zeit',
        'Pacific/Kwajalein' => 'Marshallinseln-Zeit (Kwajalein)',
        'Pacific/Majuro' => 'Marshallinseln-Zeit (Majuro)',
        'Pacific/Marquesas' => 'Marquesas-Zeit',
        'Pacific/Midway' => 'Samoa-Zeit (Midway)',
        'Pacific/Nauru' => 'Nauru-Zeit',
        'Pacific/Niue' => 'Niue-Zeit',
        'Pacific/Norfolk' => 'Norfolkinsel-Zeit',
        'Pacific/Noumea' => 'Neukaledonische Zeit (Noumea)',
        'Pacific/Pago_Pago' => 'Samoa-Zeit (Pago Pago)',
        'Pacific/Palau' => 'Palau-Zeit',
        'Pacific/Pitcairn' => 'Pitcairninseln-Zeit',
        'Pacific/Ponape' => 'Ponape-Zeit (Pohnpei)',
        'Pacific/Port_Moresby' => 'Papua-Neuguinea-Zeit (Port Moresby)',
        'Pacific/Rarotonga' => 'Cookinseln-Zeit (Rarotonga)',
        'Pacific/Saipan' => 'Chamorro-Zeit (Saipan)',
        'Pacific/Tahiti' => 'Tahiti-Zeit',
        'Pacific/Tarawa' => 'Gilbert-Inseln-Zeit (Tarawa)',
        'Pacific/Tongatapu' => 'Tongaische Zeit (Tongatapu)',
        'Pacific/Truk' => 'Chuuk-Zeit',
        'Pacific/Wake' => 'Wake-Insel-Zeit',
        'Pacific/Wallis' => 'Wallis-und-Futuna-Zeit',
    ],
    'Meta' => [],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";